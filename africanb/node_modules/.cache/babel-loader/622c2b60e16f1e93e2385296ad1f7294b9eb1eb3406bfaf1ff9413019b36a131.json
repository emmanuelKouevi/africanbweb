{"ast":null,"code":"import axios from \"axios\";\nimport $ from \"jquery\";\nimport { API_OBTENIR_LISTE_DE_TOUTES_LES_DEMANDES_ADHESIONS, API_VALIDER_DEMANDE_ADHESION_COMPAGNIE, HEADERS } from \"@/components/globalConfig/globalConstConfig\";\nexport default {\n  name: \"InfosAdhesion\",\n  data() {\n    return {\n      demandeAdhesion: {},\n      simpleObjectToSend: {\n        data: {}\n      },\n      toValid: {\n        data: {\n          id: null\n        }\n      },\n      demandeAdhesionList: [],\n      options: {\n        index: 0,\n        size: 8\n      },\n      totalPermission: 0,\n      switch1: false,\n      switch2: false,\n      tab: null,\n      items: [\"Vue d'ensemble\", \"Opérations\"],\n      text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\n    };\n  },\n  methods: {\n    async validerDemandeAdhesion() {\n      this.toValid.data.id = this.demandeAdhesion.id;\n      await axios.post(API_VALIDER_DEMANDE_ADHESION_COMPAGNIE, this.toValid, {\n        headers: HEADERS(this.$store.state.userAuthentified.token)\n      }).then(response => {\n        if (response.status == 200) {\n          if (response.data.status.code != 800) {\n            this.$swal.fire('Validation', response.data.status.message, 'error');\n            this.toValid.data.id = null;\n          } else {\n            this.$swal.fire('Validation', response.data.status.message, 'success');\n            this.toValid.data.id = null;\n            this.demandeAdhesion.isActif = true;\n          }\n        } else {\n          this.$swal.fire('Validation', 'Error lors de la validation', 'error');\n          this.toValid.data.id = null;\n        }\n      }).catch(e => {\n        this.$swal.fire('Validation refusée', e, 'error');\n        this.toValid.data.id = null;\n      });\n    },\n    //OBTENIR LA LISTE DE TOUTES LES DEMANDE D'ADHESIONS EFFECTUÉS\n    async obtenirToutesLesDemandesAdhesion() {\n      this.loading = false;\n      axios.post(API_OBTENIR_LISTE_DE_TOUTES_LES_DEMANDES_ADHESIONS, this.options, {\n        headers: HEADERS(this.$store.state.userAuthentified.token)\n      }).then(response => {\n        if (response.status == 200) {\n          if (response.data.status.code != 800) {\n            this.errorMsg = response.data.status.message;\n            $(\".alert-error\").fadeIn();\n            setTimeout(function () {\n              $(\".alert-error\").fadeOut();\n            }, 4000);\n          } else {\n            this.demandeAdhesionList = response.data.items;\n            this.demandeAdhesionList.forEach(element => {\n              if (element.raisonSociale == this.$route.params.raisonSociale) {\n                this.demandeAdhesion = element;\n              }\n            });\n            console.log(this.demandeAdhesion);\n          }\n        } else {\n          this.errorMsg = \"Erreur\";\n        }\n      }).catch(e => {\n        this.errorMsg = e;\n      });\n    }\n  },\n  mounted() {\n    this.obtenirToutesLesDemandesAdhesion();\n  }\n};","map":{"version":3,"names":["axios","$","API_OBTENIR_LISTE_DE_TOUTES_LES_DEMANDES_ADHESIONS","API_VALIDER_DEMANDE_ADHESION_COMPAGNIE","HEADERS","name","data","demandeAdhesion","simpleObjectToSend","toValid","id","demandeAdhesionList","options","index","size","totalPermission","switch1","switch2","tab","items","text","methods","validerDemandeAdhesion","post","headers","$store","state","userAuthentified","token","then","response","status","code","$swal","fire","message","isActif","catch","e","obtenirToutesLesDemandesAdhesion","loading","errorMsg","fadeIn","setTimeout","fadeOut","forEach","element","raisonSociale","$route","params","console","log","mounted"],"sources":["src/components/InfosAdhesion.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-container fluid class=\"mt-6\">\n            <v-tabs v-model=\"tab\" align-with-title>\n                <v-tabs-slider color=\"black\"></v-tabs-slider>\n                <v-tab> Vue d'ensemble </v-tab>\n                <v-tab> Opérations </v-tab>\n            </v-tabs>\n\n            <v-tabs-items v-model=\"tab\">\n                <v-tab-item key=\"Vue d'ensemble\" class=\"mt-6\">\n                    <v-card elevation=\"\">\n                        <v-card-text>\n                            <div class=\"row\">\n                                <div class=\"col-lg-6\"><span class=\"font-weight-bold\">Activités</span></div>    \n                                <div class=\"row\">\n                                    <div class=\"col-lg-12\">Compte crée le : {{ demandeAdhesion.createdAt }}</div>\n                                </div>\n                            </div><br>\n                        </v-card-text>\n                            \n                    </v-card><br><br>\n\n                    <v-card elevation=\"\">\n                        <v-card-text>\n                            <div class=\"row\">\n                                <div class=\"col-lg-6\"><span class=\"font-weight-bold\">Informations Générales</span></div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-lg-6\"><span>Raison Sociale : {{ demandeAdhesion.raisonSociale }}</span></div>\n                                <div class=\"col-lg-6\"><span>Description: {{ demandeAdhesion.description }}</span></div>      \n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-lg-6\"><span>E-mail: {{ demandeAdhesion.email}}</span></div>\n                                <div class=\"col-lg-6\"><span>Téléphone: {{ demandeAdhesion.telephone }}</span></div>      \n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-lg-6\"><span>Ville: {{ demandeAdhesion.villeDesignation }}</span></div>\n                                <div class=\"col-lg-6\"><span>Sigle: {{ demandeAdhesion.sigle }}</span></div>      \n                            </div>\n                        </v-card-text>\n                            \n                    </v-card><br><br>\n\n                </v-tab-item>\n                <v-tab-item key=\"Opérations\">\n                    <v-card elevation=\"\">\n                        <v-card-text>\n                            <div class=\"row\">\n                                <div class=\"col-lg-6\"><span class=\"font-weight-bold\">Statut d'activation</span></div>\n                                <div class=\"col-lg-6\">\n                                    <v-chip v-if=\"demandeAdhesion.isActif === false\" x-small color=\"red\"><span class=\"font-weight-bold status\">Inactive</span></v-chip>\n                                    <v-chip v-else-if=\"demandeAdhesion.isActif === null\" x-small color=\"success\"><span class=\"font-weight-bold status\">Inactive</span></v-chip>\n                                    <v-chip v-else x-small color=\"success\"><span class=\"font-weight-bold status\">Active</span></v-chip>\n                                </div>      \n                            </div>\n                        </v-card-text>\n                    </v-card><br>\n\n                    <v-card elevation=\"\">\n                        <v-card-text>\n                            <div class=\"row\">\n                                <div class=\"col-lg-6\">\n                                    <span v-if=\"demandeAdhesion.isActif == false\" class=\"font-weight-bold\">Activé</span>\n                                    <span v-if=\"demandeAdhesion.isActif == null\" class=\"font-weight-bold\">Activé</span>\n                                </div>\n                                <div class=\"col-lg-6\">\n                                    <v-btn x-small v-if=\"demandeAdhesion.isActif == false\" @click=\"validerDemandeAdhesion\">Activer</v-btn>\n                                </div>      \n                            </div>\n                        </v-card-text>\n                    </v-card><br>   \n                    \n                </v-tab-item>\n\n            </v-tabs-items>\n        </v-container>\n    </v-app>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport $ from \"jquery\"\nimport { API_OBTENIR_LISTE_DE_TOUTES_LES_DEMANDES_ADHESIONS, API_VALIDER_DEMANDE_ADHESION_COMPAGNIE ,  HEADERS  } from \"@/components/globalConfig/globalConstConfig\"\nexport default {\n    name:\"InfosAdhesion\",\n    data(){\n        return{\n\n            demandeAdhesion: {},\n            simpleObjectToSend:{\n                data:{}\n            },\n\n            toValid:{\n                data:{\n                    id : null,\n                }\n            },\n\n            demandeAdhesionList:[],\n\n            options:{\n                index:0,\n                size:8\n            },\n\n            totalPermission : 0,\n\n            switch1: false,\n            switch2: false,\n\n            tab: null,\n            items: [\"Vue d'ensemble\" , \"Opérations\"],\n            text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n        }\n    },\n\n    methods:{\n\n        async validerDemandeAdhesion(){\n            this.toValid.data.id = this.demandeAdhesion.id\n            await axios.post(API_VALIDER_DEMANDE_ADHESION_COMPAGNIE, this.toValid , { headers : HEADERS(this.$store.state.userAuthentified.token) }).then((response) => {\n                if (response.status == 200) {\n                    if (response.data.status.code != 800) {\n                        this.$swal.fire('Validation',response.data.status.message,'error')\n                        this.toValid.data.id = null;\n                    }\n                    else{\n                        this.$swal.fire('Validation',response.data.status.message,'success')\n                        this.toValid.data.id = null;\n                        this.demandeAdhesion.isActif = true\n                    }\n                }\n                else{\n                    this.$swal.fire('Validation','Error lors de la validation','error')\n                    this.toValid.data.id = null;\n                }\n            }).catch((e) => {\n                this.$swal.fire('Validation refusée' , e , 'error')\n                this.toValid.data.id = null;\n            })\n        },\n\n\n        //OBTENIR LA LISTE DE TOUTES LES DEMANDE D'ADHESIONS EFFECTUÉS\n        async obtenirToutesLesDemandesAdhesion(){\n            this.loading = false;\n            axios.post(API_OBTENIR_LISTE_DE_TOUTES_LES_DEMANDES_ADHESIONS , this.options, { headers : HEADERS(this.$store.state.userAuthentified.token) }).then((response) => {\n                if (response.status == 200) {\n                    if (response.data.status.code != 800) {\n                        this.errorMsg = response.data.status.message\n                        $(\".alert-error\").fadeIn();\n                        setTimeout(function(){\n                            $(\".alert-error\").fadeOut(); \n                        }, 4000)\n                    }else{\n                        this.demandeAdhesionList = response.data.items;\n                        this.demandeAdhesionList.forEach(element => {\n                            if (element.raisonSociale == this.$route.params.raisonSociale) {\n                                this.demandeAdhesion = element ;\n                            }\n                        });\n                        console.log(this.demandeAdhesion)\n                    }\n                }else{\n                    this.errorMsg = \"Erreur\";\n                }\n            }).catch((e) => {\n                this.errorMsg = e\n            })\n        },\n\n\n    },\n\n    mounted(){\n        this.obtenirToutesLesDemandesAdhesion();\n    }\n}\n</script>"],"mappings":"AAiFA,OAAAA,KAAA;AACA,OAAAC,CAAA;AACA,SAAAC,kDAAA,EAAAC,sCAAA,EAAAC,OAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MAEAC,eAAA;MACAC,kBAAA;QACAF,IAAA;MACA;MAEAG,OAAA;QACAH,IAAA;UACAI,EAAA;QACA;MACA;MAEAC,mBAAA;MAEAC,OAAA;QACAC,KAAA;QACAC,IAAA;MACA;MAEAC,eAAA;MAEAC,OAAA;MACAC,OAAA;MAEAC,GAAA;MACAC,KAAA;MACAC,IAAA;IACA;EACA;EAEAC,OAAA;IAEA,MAAAC,uBAAA;MACA,KAAAb,OAAA,CAAAH,IAAA,CAAAI,EAAA,QAAAH,eAAA,CAAAG,EAAA;MACA,MAAAV,KAAA,CAAAuB,IAAA,CAAApB,sCAAA,OAAAM,OAAA;QAAAe,OAAA,EAAApB,OAAA,MAAAqB,MAAA,CAAAC,KAAA,CAAAC,gBAAA,CAAAC,KAAA;MAAA,GAAAC,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAC,MAAA;UACA,IAAAD,QAAA,CAAAxB,IAAA,CAAAyB,MAAA,CAAAC,IAAA;YACA,KAAAC,KAAA,CAAAC,IAAA,eAAAJ,QAAA,CAAAxB,IAAA,CAAAyB,MAAA,CAAAI,OAAA;YACA,KAAA1B,OAAA,CAAAH,IAAA,CAAAI,EAAA;UACA,OACA;YACA,KAAAuB,KAAA,CAAAC,IAAA,eAAAJ,QAAA,CAAAxB,IAAA,CAAAyB,MAAA,CAAAI,OAAA;YACA,KAAA1B,OAAA,CAAAH,IAAA,CAAAI,EAAA;YACA,KAAAH,eAAA,CAAA6B,OAAA;UACA;QACA,OACA;UACA,KAAAH,KAAA,CAAAC,IAAA;UACA,KAAAzB,OAAA,CAAAH,IAAA,CAAAI,EAAA;QACA;MACA,GAAA2B,KAAA,CAAAC,CAAA;QACA,KAAAL,KAAA,CAAAC,IAAA,uBAAAI,CAAA;QACA,KAAA7B,OAAA,CAAAH,IAAA,CAAAI,EAAA;MACA;IACA;IAGA;IACA,MAAA6B,iCAAA;MACA,KAAAC,OAAA;MACAxC,KAAA,CAAAuB,IAAA,CAAArB,kDAAA,OAAAU,OAAA;QAAAY,OAAA,EAAApB,OAAA,MAAAqB,MAAA,CAAAC,KAAA,CAAAC,gBAAA,CAAAC,KAAA;MAAA,GAAAC,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAC,MAAA;UACA,IAAAD,QAAA,CAAAxB,IAAA,CAAAyB,MAAA,CAAAC,IAAA;YACA,KAAAS,QAAA,GAAAX,QAAA,CAAAxB,IAAA,CAAAyB,MAAA,CAAAI,OAAA;YACAlC,CAAA,iBAAAyC,MAAA;YACAC,UAAA;cACA1C,CAAA,iBAAA2C,OAAA;YACA;UACA;YACA,KAAAjC,mBAAA,GAAAmB,QAAA,CAAAxB,IAAA,CAAAa,KAAA;YACA,KAAAR,mBAAA,CAAAkC,OAAA,CAAAC,OAAA;cACA,IAAAA,OAAA,CAAAC,aAAA,SAAAC,MAAA,CAAAC,MAAA,CAAAF,aAAA;gBACA,KAAAxC,eAAA,GAAAuC,OAAA;cACA;YACA;YACAI,OAAA,CAAAC,GAAA,MAAA5C,eAAA;UACA;QACA;UACA,KAAAkC,QAAA;QACA;MACA,GAAAJ,KAAA,CAAAC,CAAA;QACA,KAAAG,QAAA,GAAAH,CAAA;MACA;IACA;EAGA;EAEAc,QAAA;IACA,KAAAb,gCAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}