{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport $ from 'jquery';\nimport { API_CREER_FUNCTIONNALITY, HEADERS } from '../globalConfig/globalConstConfig';\nimport { required } from 'vuelidate/lib/validators';\nexport default {\n  name: \"creerFonctionnalite\",\n  data() {\n    return {\n      errorMsg: null,\n      successMsg: null,\n      overlay: false,\n      headers: [{\n        text: 'Libelle',\n        value: 'libelle'\n      }, {\n        text: 'Code',\n        value: 'code'\n      }, {\n        text: 'Actions',\n        value: 'actions',\n        sortable: false\n      }],\n      search: \"\",\n      functionnalityObject: {\n        libelle: null,\n        code: null\n      },\n      functionnalityToSend: {\n        datas: []\n      }\n    };\n  },\n  validations: {\n    functionnalityObject: {\n      code: {\n        required\n      }\n    }\n  },\n  methods: {\n    // SOUMETTRE LE FORMULAIRE\n    submitForm() {\n      if (this.functionnalityToSend.datas.length == 0) {\n        this.errorMsg = 'Aucune functionnalitée  n\\'a été ajouté';\n        $(\".alert-error\").fadeIn();\n        setTimeout(function () {\n          $(\".alert-error\").fadeOut();\n        }, 3000);\n      } else {\n        this.enregistrerFunctionnality();\n      }\n    },\n    //SUPPRIMER UNE FONCTIONNALITÉ\n    supprimerFunctionnality(position) {\n      this.functionnalityToSend.datas.splice(position, 1);\n    },\n    //AJOUTER UNE FONCTIONNALITÉ DANS LA LISTE\n    addFunctionnality() {\n      this.$v.$touch();\n      if (this.$v.functionnalityObject.code.$invalid) {\n        this.errorMsg = \"Le code est obligatoire !\";\n        $(\".alert-error\").fadeIn();\n        setTimeout(function () {\n          $(\".alert-error\").fadeOut();\n        }, 2000);\n      } else {\n        var functionnality = {\n          libelle: null,\n          code: null\n        };\n        functionnality.libelle = this.functionnalityObject.libelle;\n        functionnality.code = this.functionnalityObject.code;\n        this.functionnalityToSend.datas.push(functionnality);\n        this.functionnalityObject.libelle = null;\n        this.functionnalityObject.code = null;\n      }\n    },\n    // CREER UNE FONCTIONNALITÉ\n    async enregistrerFunctionnality() {\n      this.overlay = true;\n      await axios.post(API_CREER_FUNCTIONNALITY, this.functionnalityToSend, {\n        headers: HEADERS(this.$store.state.userAuthentified.token)\n      }).then(response => {\n        if (response.status == 200) {\n          if (response.data.status.code == 800) {\n            this.successMsg = response.data.status.message;\n            $(\".alert-success\").fadeIn();\n            setTimeout(function () {\n              $(\".alert-success\").fadeOut();\n            }, 4000);\n            this.functionnalityToSend.datas = [];\n          } else {\n            this.errorMsg = response.data.status.message;\n            $(\".alert-error\").fadeIn();\n            setTimeout(function () {\n              $(\".alert-error\").fadeOut();\n            }, 3000);\n            this.functionnalityToSend.datas = [];\n          }\n        } else if (response.status == 204) {\n          this.warningMsg = \"Erreur , lors de la création\";\n          $(\".alert-warning\").fadeIn();\n          setTimeout(function () {\n            $(\".alert-warning\").fadeOut();\n          }, 3000);\n          this.functionnalityToSend.datas = [];\n        } else {\n          this.errorMsg = \"Erreur , opération de création impossible\";\n          $(\".alert-error\").fadeIn();\n          setTimeout(function () {\n            $(\".alert-error\").fadeOut();\n          }, 3000);\n          this.functionnalityToSend.datas = [];\n        }\n      }).catch(e => {\n        this.errorMsg = e;\n        $(\".alert-error\").fadeIn();\n        setTimeout(function () {\n          $(\".alert-error\").fadeOut();\n        }, 3000);\n        this.functionnalityToSend.datas = [];\n      }).finally(() => {\n        this.overlay = false;\n      });\n    }\n  },\n  computed: {\n    codeContrainte() {\n      const errors = [];\n      if (!this.$v.functionnalityObject.code.$dirty) return errors;\n      !this.$v.functionnalityObject.code.required && errors.push('Le code est obligatoire.');\n      return errors;\n    }\n  }\n};","map":{"version":3,"mappings":";AA+EA;AACA;AACA;AACA;AACA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MAEAC,UACA;QAAAC;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;QAAAC;MAAA,EACA;MACAC;MAEAC;QACAC;QACAC;MACA;MAEAC;QACAC;MACA;IACA;EACA;EAEAC;IAEAL;MACAE;QACAI;MACA;IACA;EAEA;EAEAC;IAEA;IACAC;MACA;QACA;QACAC;QACAC;UACAD;QACA;MACA;QACA;MACA;IACA;IAGA;IACAE;MACA;IACA;IAGA;IACAC;MACA;MACA;QACA;QACAH;QACAC;UACAD;QACA;MACA,OACA;QACA;UACAR;UACAC;QACA;QACAW;QACAA;QAEA;QAEA;QACA;MACA;IACA;IAEA;IACA;MACA;MACA;QAAAlB;MAAA;QACA;UACA;YACA;YACAc;YACAC;cACAD;YACA;YACA;UACA;YACA;YACAA;YACAC;cACAD;YACA;YACA;UACA;QAEA,OACA;UACA;UACAA;UACAC;YACAD;UACA;UACA;QACA,OACA;UACA;UACAA;UACAC;YACAD;UACA;UACA;QACA;MACA;QACA;QACAA;QACAC;UACAD;QACA;QACA;MACA;QACA;MACA;IACA;EAEA;EAEAK;IAEAC;MACA;MACA;MACA;MACA;IACA;EACA;AACA","names":["name","data","errorMsg","successMsg","overlay","headers","text","value","sortable","search","functionnalityObject","libelle","code","functionnalityToSend","datas","validations","required","methods","submitForm","$","setTimeout","supprimerFunctionnality","addFunctionnality","functionnality","computed","codeContrainte"],"sourceRoot":"src/components/administrateur_societe","sources":["creerFonctionnalite.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-form @submit.prevent=\"submitForm\">\n            <v-container fluid>\n                <v-card max-width=\"800px\" class=\"mx-auto\">\n                    <v-card-title><h4>CREER UNE FONCTIONNALITÉ</h4>\n                        <v-spacer></v-spacer>\n                        <v-dialog transition=\"dialog-top-transition\" max-width=\"700\">\n                            <template v-slot:activator=\"{ on, attrs }\">\n                                <v-btn color=\"white\" rounded small v-bind=\"attrs\" v-on=\"on\">NOUVELLE FONCTIONNALITÉ</v-btn>\n                            </template>\n                            <template v-slot:default=\"dialog\">\n                                <v-card>\n                                    <v-toolbar color=\"white\"><span class=\"font-weight-bold\">PARAMETRES DES FONCTIONNALITÉS</span>\n                                        <v-spacer></v-spacer>\n                                        <v-btn text small color=\"black\" @click=\"addFunctionnality(functionnalityObject)\"><v-icon>mdi-check</v-icon>VALIDER</v-btn>\n                                    </v-toolbar>\n                                    <v-card-text>\n                                        <v-container fluid>\n                                            <v-subheader><v-icon color=\"#40407a\">mdi-alert-circle</v-icon>&nbsp;&nbsp;</v-subheader>\n                                            <v-subheader><br>Définissez les infos de vos fonctionnalités : &nbsp;&nbsp;&nbsp; </v-subheader>\n                                            <v-row>\n                                                <v-col><v-text-field class=\"my_input\" v-model=\"functionnalityObject.libelle\" rounded dense outlined label=\"Libellé\"></v-text-field></v-col>\n                                                <v-col><v-text-field class=\"my_input\" :error-messages=\"codeContrainte\" v-model.trim=\"$v.functionnalityObject.code.$model\" rounded dense outlined label=\"Code\"></v-text-field></v-col>\n                                            </v-row>\n                                        </v-container>\n                                    </v-card-text>\n                                    <v-card-actions class=\"justify-end\">\n                                        <v-btn text @click=\"dialog.value = false\">RETOUR SANS SAUVEGARDER</v-btn>\n                                    </v-card-actions>\n                                </v-card>\n                            </template>\n                        </v-dialog>\n                    </v-card-title>\n                    <v-card-subtitle>Définissez les fonctionnalités pour les différents rôles</v-card-subtitle>\n                    <v-container>\n                        <v-divider></v-divider>   \n                        <v-divider></v-divider><br>\n\n                        <v-row v-if=\"functionnalityToSend.datas.length == 0\">\n                            <v-col class=\"text-center\">\n                                <span class=\"font-weight-thin\">AUCUNE FONCTIONNALITÉS DÉFINIE</span>\n                            </v-col>\n                        </v-row>\n\n                        <v-row v-else>\n                            <v-sheet width=\"750\" class=\"mx-auto\">\n                                <v-card-title class=\"title-card\"><span><h5>VOS FONCTIONNALITÉS</h5></span>\n                                    <v-spacer></v-spacer>\n                                    <v-text-field v-model=\"search\" append-icon=\"mdi-magnify\" label=\"Search\" single-line hide-details></v-text-field>               \n                                 </v-card-title>\n                                <v-data-table\n                                    :headers=\"headers\"\n                                    :items=\"functionnalityToSend.datas\"\n                                    :search=\"search\">\n\n                                    <template v-slot:[`item.actions`]=\"{ item }\">                   \n                                        <v-icon title=\"supprimer\" color=\"red\" small class=\"mr-2\" @click=\"supprimerFunctionnality(item)\">mdi-delete</v-icon>\n                                    </template>\n\n                                </v-data-table>\n                            </v-sheet>\n                        </v-row>\n                        \n                    </v-container>\n                    <v-card-actions>\n                        <v-btn small shaped rounded outlined>REINITIALISER</v-btn>\n                        <v-btn type=\"submit\" small shaped rounded outlined color=\"primary\">SAUVEGARDER</v-btn>\n                    </v-card-actions>\n                </v-card>\n            </v-container>\n        </v-form>\n        <v-alert class=\"myalert alert-error\" type=\"error\" width=\"350px\" dismissible>{{ errorMsg }}</v-alert>\n        <v-alert class=\"myalert alert-success\" type=\"success\" width=\"350px\" dismissible>{{ successMsg }}</v-alert>\n        <v-overlay :value=\"overlay\"><v-progress-circular indeterminate size=\"64\"></v-progress-circular></v-overlay>\n    </v-app>\n</template>\n\n<script>\nimport axios from 'axios'\nimport $ from 'jquery'\nimport { API_CREER_FUNCTIONNALITY, HEADERS } from '../globalConfig/globalConstConfig'\nimport { required } from 'vuelidate/lib/validators'\nexport default {\n    name:\"creerFonctionnalite\",\n    data(){\n        return{\n            errorMsg : null,\n            successMsg : null,\n            overlay : false ,\n\n            headers:[\n                {text : 'Libelle' , value : 'libelle'},\n                {text : 'Code' , value : 'code'},\n                {text : 'Actions' , value : 'actions' , sortable : false}\n            ],\n            search:\"\",\n\n            functionnalityObject:{\n                libelle : null ,\n                code : null ,\n            },\n\n            functionnalityToSend:{\n                datas: []\n            }\n        }\n    },\n\n    validations :{\n\n        functionnalityObject:{\n            code:{\n                required\n            }\n        }\n\n    },\n    \n    methods:{\n\n        // SOUMETTRE LE FORMULAIRE\n        submitForm(){\n            if (this.functionnalityToSend.datas.length == 0) {\n                this.errorMsg = 'Aucune functionnalitée  n\\'a été ajouté'\n                $(\".alert-error\").fadeIn();\n                setTimeout(function(){\n                    $(\".alert-error\").fadeOut(); \n                }, 3000)\n            }else{\n                this.enregistrerFunctionnality();\n            }\n        },\n\n\n        //SUPPRIMER UNE FONCTIONNALITÉ\n        supprimerFunctionnality(position){\n            this.functionnalityToSend.datas.splice(position,1)\n        },\n\n\n        //AJOUTER UNE FONCTIONNALITÉ DANS LA LISTE\n        addFunctionnality(){\n            this.$v.$touch();\n            if (this.$v.functionnalityObject.code.$invalid) {\n              this.errorMsg = \"Le code est obligatoire !\" ;\n              $(\".alert-error\").fadeIn();\n              setTimeout(function(){\n                $(\".alert-error\").fadeOut(); \n              }, 2000);\n            }\n            else{\n                var functionnality = {\n                    libelle : null ,\n                    code : null , \n                }\n                functionnality.libelle = this.functionnalityObject.libelle\n                functionnality.code = this.functionnalityObject.code\n\n                this.functionnalityToSend.datas.push(functionnality);\n\n                this.functionnalityObject.libelle = null;\n                this.functionnalityObject.code = null;\n            }\n        },\n\n        // CREER UNE FONCTIONNALITÉ\n        async enregistrerFunctionnality(){\n            this.overlay = true ;\n            await axios.post(API_CREER_FUNCTIONNALITY, this.functionnalityToSend, { headers : HEADERS(this.$store.state.userAuthentified.token) }).then((response) => {\n                if (response.status == 200) {\n                    if (response.data.status.code == 800) {\n                        this.successMsg = response.data.status.message\n                        $(\".alert-success\").fadeIn();\n                        setTimeout(function(){\n                            $(\".alert-success\").fadeOut(); \n                        }, 4000)\n                        this.functionnalityToSend.datas = [];\n                    }else{\n                        this.errorMsg = response.data.status.message\n                        $(\".alert-error\").fadeIn();\n                        setTimeout(function(){\n                            $(\".alert-error\").fadeOut(); \n                        }, 3000)\n                        this.functionnalityToSend.datas = [];\n                    }  \n                    \n                }\n                else if (response.status == 204) {\n                    this.warningMsg = \"Erreur , lors de la création\";\n                    $(\".alert-warning\").fadeIn();\n                    setTimeout(function(){\n                        $(\".alert-warning\").fadeOut(); \n                    }, 3000)\n                    this.functionnalityToSend.datas = [];\n                }\n                else{\n                    this.errorMsg = \"Erreur , opération de création impossible\";\n                    $(\".alert-error\").fadeIn();\n                    setTimeout(function(){\n                        $(\".alert-error\").fadeOut(); \n                    }, 3000)\n                    this.functionnalityToSend.datas = [];\n                }\n            }).catch((e) => {\n                this.errorMsg = e;\n                $(\".alert-error\").fadeIn();\n                setTimeout(function(){\n                    $(\".alert-error\").fadeOut(); \n                }, 3000)\n                this.functionnalityToSend.datas = [];\n            }).finally(() => {\n                this.overlay = false;\n            })\n        },\n\n    },\n\n    computed:{\n\n        codeContrainte(){\n            const errors = [];\n            if (!this.$v.functionnalityObject.code.$dirty) return errors\n            !this.$v.functionnalityObject.code.required && errors.push('Le code est obligatoire.')\n            return errors \n        },\n    }\n}\n</script>\n\n<style scoped>\n    .myalert{\n        display: none;\n        z-index: 1900;\n    }\n\n    .alert-success{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n\n    .alert-error{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n\n    .alert-warning{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n\n    h4{\n        font-family: Verdana, Geneva, Tahoma, sans-serif;\n    }\n\n    h5{\n        font-family: Verdana, Geneva, Tahoma, sans-serif;\n        font-size: 13px;\n    }\n\n    .my_input{\n        font-family: Verdana, Geneva, Tahoma, sans-serif;\n        font-weight: bolder;\n        color: #596275;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}