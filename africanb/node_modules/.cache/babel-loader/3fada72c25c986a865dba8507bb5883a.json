{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { API_RECUPERER_LISTE_OFFRE_VOYAGE, HEADERS } from '../globalConfig/globalConstConfig';\nimport axios from 'axios';\nimport $ from 'jquery';\nexport default {\n  data() {\n    return {\n      loading: true,\n      errorMsg: false,\n      warningMsg: false,\n      successMsg: false,\n      search: '',\n      headers: [{\n        text: 'reference',\n        value: 'id'\n      }, {\n        text: 'Designation',\n        value: 'designation'\n      }, {\n        text: 'Type de l\\'offre',\n        value: 'typeOffreVoyageDesignation'\n      }, {\n        text: 'Ville de départ',\n        value: 'villeDepartDesignation'\n      }, {\n        text: 'Ville d\\'arrivée',\n        value: 'villeDestinationDesignation'\n      }, {\n        text: 'Actions',\n        value: 'actions',\n        sortable: false\n      }],\n      offreVoyageAvailableList: [],\n      offreVoyageObject: {\n        data: {\n          compagnieTransportRaisonSociale: \"Kouevi CT\"\n        }\n      }\n    };\n  },\n  methods: {\n    /*OBTENIR LA LISTE DES OFFRES DE VOYAGES DISPONIBLES POUR LES VENDEURS POUR \n        QU'ILS PUISSENT PROCÉDER À LA RESERVATION DE BILLETS POUR LES CLIENTS\n    */\n    async getOffreVoyageAvailables() {\n      this.loading = true;\n      await axios.post(API_RECUPERER_LISTE_OFFRE_VOYAGE, this.offreVoyageObject, {\n        headers: HEADERS(this.$store.state.userAuthentified.token)\n      }).then(response => {\n        if (response.status == 200) {\n          if (response.data.status.code != 800) {\n            this.errorMsg = response.data.status.message;\n            $(\".alert-error\").fadeIn();\n            setTimeout(function () {\n              $(\".alert-error\").fadeOut();\n            }, 4000);\n          } else {\n            this.offreVoyageAvailableList = response.data.items;\n          }\n        } else {\n          this.errorMsg = \"Erreur\";\n          $(\".alert-error\").fadeIn();\n          setTimeout(function () {\n            $(\".alert-error\").fadeOut();\n          }, 4000);\n        }\n      }).catch(e => {\n        this.errorMsg = e;\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n    storeOffreVoyageItem(item) {\n      const parsedOffreSelected = JSON.stringify(item);\n      localStorage.setItem('offreVoyageSelected', parsedOffreSelected);\n    },\n    reserverTicket(offreVoyage) {\n      this.storeOffreVoyageItem(offreVoyage);\n      this.$router.push({\n        path: \"/reservationBillet\"\n      });\n    }\n  },\n  mounted() {\n    this.getOffreVoyageAvailables();\n  }\n};","map":{"version":3,"mappings":";AAkBA;AACA;AACA;AACA;EACAA;IACA;MACAC;MAEAC;MACAC;MACAC;MAEAC;MAEAC,UACA;QAAAC;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;QAAAC;MAAA,EACA;MAEAC;MAEAC;QACAX;UACAY;QACA;MACA;IAEA;EACA;EAEAC;IACA;AACA;AACA;IACA;MACA;MACA;QAAAP;MAAA;QACA;UACA;YACA;YACAQ;YACAC;cACAD;YACA;UACA;YACA;UACA;QACA;UACA;UACAA;UACAC;YACAD;UACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;IAEAE;MACA;MACAC;IACA;IAEAC;MACA;MACA;QAAAC;MAAA;IACA;EAGA;EAEAC;IACA;EACA;AACA","names":["data","loading","errorMsg","warningMsg","successMsg","search","headers","text","value","sortable","offreVoyageAvailableList","offreVoyageObject","compagnieTransportRaisonSociale","methods","$","setTimeout","storeOffreVoyageItem","localStorage","reserverTicket","path","mounted"],"sourceRoot":"src/components/vendeur","sources":["OffreVoyageReservation.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-container>\n            <v-card>\n                <v-card-title><span class=\"title_card\">OFFRE DE VOYAGES DISPONIBLES</span></v-card-title>\n                <v-card-text>\n                    <v-data-table item-class=\"offreItem\" :headers=\"headers\" :loading=\"loading\" :items=\"offreVoyageAvailableList\">\n                        <template v-slot:[`item.actions`]=\"{ item }\">\n                           <v-btn x-small color=\"teal\"><small class=\"btn-label\" @click=\"reserverTicket(item)\">Réserver</small></v-btn>\n                        </template>\n                    </v-data-table>\n                </v-card-text>\n            </v-card>\n        </v-container>\n    </v-app>\n</template>\n\n<script>\nimport { API_RECUPERER_LISTE_OFFRE_VOYAGE , HEADERS } from '../globalConfig/globalConstConfig'\nimport axios from 'axios'\nimport $ from 'jquery'\n    export default {\n        data(){\n            return{\n                loading:true,\n\n                errorMsg:false,\n                warningMsg:false,\n                successMsg:false,\n\n                search:'',\n                \n                headers:[\n                    {text : 'reference' , value : 'id'},\n                    {text : 'Designation' , value : 'designation'},\n                    {text : 'Type de l\\'offre' , value : 'typeOffreVoyageDesignation'},\n                    {text : 'Ville de départ' , value : 'villeDepartDesignation'},\n                    {text : 'Ville d\\'arrivée' , value : 'villeDestinationDesignation'},\n                    {text : 'Actions' , value : 'actions' , sortable : false}\n                ],\n\n                offreVoyageAvailableList:[],\n\n                offreVoyageObject:{\n                    data:{\n                        compagnieTransportRaisonSociale:\"Kouevi CT\"\n                    }\n                },\n\n            }\n        }, \n\n        methods:{\n            /*OBTENIR LA LISTE DES OFFRES DE VOYAGES DISPONIBLES POUR LES VENDEURS POUR \n                QU'ILS PUISSENT PROCÉDER À LA RESERVATION DE BILLETS POUR LES CLIENTS\n            */  \n            async getOffreVoyageAvailables(){\n                this.loading = true;\n                await axios.post(API_RECUPERER_LISTE_OFFRE_VOYAGE, this.offreVoyageObject , { headers : HEADERS(this.$store.state.userAuthentified.token) }).then((response) => {\n                    if (response.status == 200) {\n                        if (response.data.status.code != 800) {\n                            this.errorMsg = response.data.status.message\n                            $(\".alert-error\").fadeIn();\n                            setTimeout(function(){\n                                $(\".alert-error\").fadeOut(); \n                            }, 4000)\n                        }else{\n                            this.offreVoyageAvailableList = response.data.items;\n                        }\n                    }else{\n                        this.errorMsg = \"Erreur\";\n                        $(\".alert-error\").fadeIn();\n                        setTimeout(function(){\n                            $(\".alert-error\").fadeOut(); \n                        }, 4000)\n                    }\n                }).catch((e) => {\n                    this.errorMsg = e\n                }).finally(() => {\n                    this.loading = false;   \n                })\n            },\n\n            storeOffreVoyageItem(item){\n                const parsedOffreSelected = JSON.stringify(item);\n                localStorage.setItem('offreVoyageSelected', parsedOffreSelected);\n            },\n\n            reserverTicket(offreVoyage){\n                this.storeOffreVoyageItem(offreVoyage);\n                this.$router.push({ path: \"/reservationBillet\"})\n            },\n\n            \n        },\n\n        mounted(){\n            this.getOffreVoyageAvailables()\n        }\n    }\n</script>\n\n<style scoped>\n    .myalert{\n        display: none;\n        z-index: 1900;\n    }\n\n    .alert-error{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n\n    .title_card{\n        font-weight: bold;\n        font-size: 12px;\n    }\n\n    .offreItem{\n        font-size: 12px;\n    }\n\n    .btn-label{\n        color: white;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}