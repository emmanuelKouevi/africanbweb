{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport $ from 'jquery';\nimport { API_OBTENIR_LISTE_DES_VILLES_DISPONIBLE, API_CREER_VILLES_ESCALES_OFFRE_VOYAGE, HEADERS } from '../globalConfig/globalConstConfig';\nexport default {\n  name: 'ModifierVilleEscaleOffreVoyage',\n  data() {\n    return {\n      errorMsg: null,\n      successMsg: null,\n      overlay: false,\n      objectValue: {},\n      villesList: [],\n      villeEscaleModel: {\n        id: null,\n        position: null,\n        villeDesignation: null\n      },\n      villeEscaleToModify: {\n        datas: []\n      }\n    };\n  },\n  methods: {\n    // SOUMISSION DU FORMULAIRE DE MODIFICATION\n    submitForm() {\n      this.enregistrerModificationVilleEscale();\n    },\n    //ENREGISTRER LES MODIFICATIONS PORTANT SUR UNE VILLE D'ESCALE\n    async enregistrerModificationVilleEscale() {\n      this.villeEscaleToModify.datas.push(this.villeEscaleModel);\n      this.overlay = true;\n      await axios.put(API_CREER_VILLES_ESCALES_OFFRE_VOYAGE, this.villeEscaleToModify, {\n        headers: HEADERS(this.$store.state.userAuthentified.token)\n      }).then(response => {\n        if (response.status == 200) {\n          if (response.data.status.code == 800) {\n            this.successMsg = response.data.status.message;\n            $(\".alert-success\").fadeIn();\n            setTimeout(function () {\n              $(\".alert-success\").fadeOut();\n            }, 4000);\n            this.villeEscaleToModify.datas = [];\n          } else {\n            this.errorMsg = response.data.status.message;\n            $(\".alert-error\").fadeIn();\n            setTimeout(function () {\n              $(\".alert-error\").fadeOut();\n            }, 3000);\n            this.villeEscaleToModify.datas = [];\n          }\n        } else if (response.status == 204) {\n          this.warningMsg = \"Erreur , lors de la modification de l'offre de voyage\";\n          $(\".alert-warning\").fadeIn();\n          setTimeout(function () {\n            $(\".alert-warning\").fadeOut();\n          }, 3000);\n          this.villeEscaleToModify.datas = [];\n        } else {\n          this.errorMsg = \"Erreur , opération de modification impossible\";\n          $(\".alert-error\").fadeIn();\n          setTimeout(function () {\n            $(\".alert-error\").fadeOut();\n          }, 3000);\n          this.villeEscaleToModify.datas = [];\n        }\n      }).catch(e => {\n        this.errorMsg = e;\n        $(\".alert-error\").fadeIn();\n        setTimeout(function () {\n          $(\".alert-error\").fadeOut();\n        }, 4000);\n        this.villeEscaleToModify.datas = [];\n      }).finally(() => {\n        this.overlay = false;\n      });\n    },\n    // MODE EDITION D'UNE VILLE ESCALE\n    async editerVilleEscale() {\n      if (localStorage.getItem(\"villeEscaleEdit\")) {\n        try {\n          const villeEscaleEditing = JSON.parse(localStorage.getItem(\"villeEscaleEdit\"));\n          this.villeEscaleModel.id = villeEscaleEditing.id;\n          this.villeEscaleModel.villeDesignation = villeEscaleEditing.designation;\n          this.villeEscaleModel.position = villeEscaleEditing.position;\n          localStorage.removeItem(\"villeEscaleEdit\");\n        } catch (error) {\n          localStorage.removeItem(\"villeEscaleEdit\");\n        }\n      } else {\n        this.$router.replace({\n          path: '/selectionnerOffreVoyage'\n        });\n      }\n    },\n    //RECUPERER LA LISTE DES VILLES DISPONIBLES\n    async obtenirVillesListApi() {\n      await axios.post(API_OBTENIR_LISTE_DES_VILLES_DISPONIBLE, this.objectValue, {\n        headers: HEADERS(this.$store.state.userAuthentified.token)\n      }).then(response => {\n        this.villesList = response.data.items;\n      }).catch(e => {\n        this.errorMsg = e;\n        $(\".alert-error\").fadeIn();\n        setTimeout(function () {\n          $(\".alert-error\").fadeOut();\n        }, 4000);\n      });\n    }\n  },\n  computed: {},\n  mounted() {\n    this.obtenirVillesListApi();\n    this.editerVilleEscale();\n  }\n};","map":{"version":3,"mappings":";AA2BA;AACA;AACA;AACA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MAEAC;MACAC;MAEAC;QACAC;QACAC;QACAC;MACA;MAEAC;QACAC;MACA;IACA;EACA;EAEAC;IAEA;IACAC;MACA;IACA;IAEA;IACA;MACA;MACA;MACA;QAAAC;MAAA;QACA;UACA;YACA;YACAC;YACAC;cACAD;YACA;YACA;UACA;YACA;YACAA;YACAC;cACAD;YACA;YACA;UACA;QAEA,OACA;UACA;UACAA;UACAC;YACAD;UACA;UACA;QACA,OACA;UACA;UACAA;UACAC;YACAD;UACA;UACA;QACA;MACA;QACA;QACAA;QACAC;UACAD;QACA;QACA;MACA;QACA;MACA;IACA;IAEA;IACA;MACA;QACA;UACA;UACA;UACA;UACA;UACAE;QACA;UACAA;QACA;MACA;QACA;UAAAC;QAAA;MACA;IACA;IAEA;IACA;MACA;QAAAJ;MAAA;QACA;MACA;QACA;QACAC;QACAC;UACAD;QACA;MACA;IACA;EACA;EAEAI;EAEAC;IACA;IACA;EACA;AACA","names":["name","data","errorMsg","successMsg","overlay","objectValue","villesList","villeEscaleModel","id","position","villeDesignation","villeEscaleToModify","datas","methods","submitForm","headers","$","setTimeout","localStorage","path","computed","mounted"],"sourceRoot":"src/components/administration_compagnie_transport","sources":["ModifierVilleEscaleOffreVoyage.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-form @submit.prevent=\"submitForm\">\n            <v-container fluid>\n                <v-card>\n                    <v-card-title>GESTION DES VILLES EN ESCALES</v-card-title>\n                    <v-card-subtitle>Gérer les villes escales pour une offre</v-card-subtitle>\n                    <v-container>\n                        <v-row>\n                            <v-col cols=\"2\"><v-text-field rounded dense outlined label=\"Ordre escale\" type=\"number\" min=\"0\" v-model=\"villeEscaleModel.position\"></v-text-field></v-col>\n                            <v-col cols=\"5\"><v-select label=\"Sélectionner une ville\" :items=\"villesList\" item-text=\"designation\" v-model=\"villeEscaleModel.villeDesignation\" item-value=\"designation\" dense outlined rounded></v-select></v-col>\n                        </v-row>\n                    </v-container>\n                    <v-card-actions>\n                        <v-btn rounded outlined small>REINITIALISER</v-btn>\n                        <v-btn type=\"submit\" rounded outlined small color=\"teal\">ENREGISTRER LES MODIFICATIONS</v-btn>\n                    </v-card-actions>\n                </v-card>\n            </v-container>\n        </v-form>\n        <v-alert class=\"myalert alert-error\" type=\"error\" width=\"350px\" dismissible>{{ errorMsg }}</v-alert>\n        <v-alert class=\"myalert alert-success\" type=\"success\" width=\"350px\" dismissible>{{ successMsg }}</v-alert>\n        <v-overlay :value=\"overlay\"><v-progress-circular indeterminate size=\"64\"></v-progress-circular></v-overlay>\n    </v-app>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport $ from 'jquery';\nimport { API_OBTENIR_LISTE_DES_VILLES_DISPONIBLE , API_CREER_VILLES_ESCALES_OFFRE_VOYAGE, HEADERS } from '../globalConfig/globalConstConfig'\nexport default {\n    name:'ModifierVilleEscaleOffreVoyage',\n    data(){\n        return{\n            errorMsg :null,\n            successMsg:null,\n            overlay:false,\n\n            objectValue:{},\n            villesList:[],\n\n            villeEscaleModel:{\n                id:null,\n                position: null,\n                villeDesignation:null,\n            },\n\n            villeEscaleToModify:{\n                datas:[]\n            }\n        }\n    },\n\n    methods:{\n\n        // SOUMISSION DU FORMULAIRE DE MODIFICATION\n        submitForm(){\n            this.enregistrerModificationVilleEscale();\n        },\n\n        //ENREGISTRER LES MODIFICATIONS PORTANT SUR UNE VILLE D'ESCALE\n        async enregistrerModificationVilleEscale(){\n            this.villeEscaleToModify.datas.push(this.villeEscaleModel);\n            this.overlay = true ;\n            await axios.put(API_CREER_VILLES_ESCALES_OFFRE_VOYAGE , this.villeEscaleToModify , { headers : HEADERS(this.$store.state.userAuthentified.token) }).then((response) => {\n                if (response.status == 200) {\n                    if (response.data.status.code == 800) {\n                        this.successMsg = response.data.status.message\n                        $(\".alert-success\").fadeIn();\n                        setTimeout(function(){\n                            $(\".alert-success\").fadeOut(); \n                        }, 4000)\n                        this.villeEscaleToModify.datas = [] ;\n                    }else{\n                        this.errorMsg = response.data.status.message\n                        $(\".alert-error\").fadeIn();\n                        setTimeout(function(){\n                            $(\".alert-error\").fadeOut(); \n                        }, 3000)\n                        this.villeEscaleToModify.datas = [] ;\n                    }  \n                    \n                }\n                else if (response.status == 204) {\n                    this.warningMsg = \"Erreur , lors de la modification de l'offre de voyage\";\n                    $(\".alert-warning\").fadeIn();\n                    setTimeout(function(){\n                        $(\".alert-warning\").fadeOut(); \n                    }, 3000)\n                    this.villeEscaleToModify.datas = [] ;\n                }\n                else{\n                    this.errorMsg = \"Erreur , opération de modification impossible\";\n                    $(\".alert-error\").fadeIn();\n                    setTimeout(function(){\n                        $(\".alert-error\").fadeOut(); \n                    }, 3000)\n                    this.villeEscaleToModify.datas = [] ;\n                }\n            }).catch((e) => {\n                this.errorMsg = e ;\n                $(\".alert-error\").fadeIn();\n                setTimeout(function(){\n                    $(\".alert-error\").fadeOut(); \n                }, 4000)\n                this.villeEscaleToModify.datas = [] ;\n            }).finally(() => {\n                this.overlay = false;\n            })\n        },\n\n        // MODE EDITION D'UNE VILLE ESCALE\n        async editerVilleEscale(){\n            if (localStorage.getItem(\"villeEscaleEdit\")) {\n                try {\n                    const villeEscaleEditing = JSON.parse(localStorage.getItem(\"villeEscaleEdit\"));\n                    this.villeEscaleModel.id = villeEscaleEditing.id;\n                    this.villeEscaleModel.villeDesignation = villeEscaleEditing.designation;\n                    this.villeEscaleModel.position = villeEscaleEditing.position;\n                    localStorage.removeItem(\"villeEscaleEdit\");\n                } catch (error) {\n                    localStorage.removeItem(\"villeEscaleEdit\");\n                }\n            }else{\n                this.$router.replace({path:'/selectionnerOffreVoyage'})\n            }\n        },\n\n        //RECUPERER LA LISTE DES VILLES DISPONIBLES\n        async obtenirVillesListApi(){\n            await axios.post(API_OBTENIR_LISTE_DES_VILLES_DISPONIBLE, this.objectValue , { headers : HEADERS(this.$store.state.userAuthentified.token) }).then((response) => {\n                this.villesList = response.data.items\n            }).catch((e) => {\n                this.errorMsg = e ;\n                $(\".alert-error\").fadeIn();\n                setTimeout(function(){\n                    $(\".alert-error\").fadeOut(); \n                }, 4000)\n            })\n        }\n    },\n\n    computed:{},\n\n    mounted(){\n        this.obtenirVillesListApi();\n        this.editerVilleEscale();\n    },\n}\n</script>\n\n\n<style scoped>\n    .myalert{\n        display: none;\n        z-index: 1900;\n    }\n\n    .alert-success{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n\n    .alert-error{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n\n    .alert-warning{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    } \n</style>"]},"metadata":{},"sourceType":"module"}