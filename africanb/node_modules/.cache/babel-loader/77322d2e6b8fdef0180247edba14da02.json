{"ast":null,"code":"import axios from \"axios\";\nimport $ from \"jquery\";\nimport { API_GET_ALL_USERS_CREATED, API_ACTIVATE_USER, HEADERS, API_GET_ALL_ROLES } from \"@/components/globalConfig/globalConstConfig\";\nexport default {\n  data() {\n    return {\n      user: {},\n      simpleObjectToSend: {\n        data: {}\n      },\n      toActive: {\n        data: {\n          login: null\n        }\n      },\n      totalPermission: 0,\n      switch1: false,\n      tab: null,\n      items: [\"Vue d'ensemble\", \"Données\", \"Opérations\"],\n      text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\n    };\n  },\n  methods: {\n    // ACTIVER UN UTILISATEUR\n    async toActivedUser() {\n      this.toActive.data.login = this.user.login;\n      await axios.post(API_ACTIVATE_USER, this.toActive, {\n        headers: HEADERS(this.$store.state.userAuthentified.token)\n      }).then(response => {\n        if (response.status == 200) {\n          if (response.data.status.code != 800) {\n            this.$swal.fire('Activation', response.data.status.message, 'error');\n            this.toActive.data.login = null;\n          } else {\n            this.$swal.fire('Activation', response.data.status.message, 'success');\n            this.toActive.data.login = null;\n          }\n        } else {\n          this.$swal.fire('Activation', 'Error lors de la validation', 'error');\n          this.toActive.data.login = null;\n        }\n      }).catch(e => {\n        this.$swal.fire('Activation refusée', e, 'error');\n        this.toActive.data.login = null;\n      });\n    },\n    // RECUPERER LA LISTE DES UTILISATEURS CREES SUR LA PLATEFORME\n    async toGetAllUsersCreated() {\n      await axios.post(API_GET_ALL_USERS_CREATED, this.simpleObjectToSend, {\n        headers: HEADERS(this.$store.state.userAuthentified.token)\n      }).then(response => {\n        if (response.status == 200) {\n          if (response.data.status.code != 800) {\n            this.errorMsg = response.data.status.message;\n            $(\".alert-error\").fadeIn();\n            setTimeout(function () {\n              $(\".alert-error\").fadeOut();\n            }, 4000);\n          } else {\n            response.data.items.forEach(element => {\n              if (element.nom == this.$route.params.nom) {\n                this.user = element;\n              }\n            });\n          }\n        } else {\n          this.errorMsg = \"Erreur\";\n          $(\".alert-error\").fadeIn();\n          setTimeout(function () {\n            $(\".alert-error\").fadeOut();\n          }, 4000);\n        }\n      }).catch(e => {\n        this.errorMsg = e;\n      }).finally(() => {\n        console.log(\"Finally\");\n      });\n    },\n    //RECUPERER LA LISTE DES ROLES CRÉES\n    async getAllUserRole() {\n      await axios.post(API_GET_ALL_ROLES, {}, {\n        headers: HEADERS(this.$store.state.userAuthentified.token)\n      }).then(response => {\n        if (response.status == 200) {\n          if (response.data.status.code != 800) {\n            this.errorMsg = response.data.status.message;\n            $(\".alert-error\").fadeIn();\n            setTimeout(function () {\n              $(\".alert-error\").fadeOut();\n            }, 4000);\n          } else {\n            response.data.items.forEach(element => {\n              if (element.code == this.user.roleCode) {\n                this.totalPermission = element.datasFunctionalities.length;\n              }\n            });\n          }\n        } else {\n          this.errorMsg = \"Erreur\";\n          $(\".alert-error\").fadeIn();\n          setTimeout(function () {\n            $(\".alert-error\").fadeOut();\n          }, 4000);\n        }\n      }).catch(e => {\n        this.errorMsg = e;\n      }).finally(() => {\n        this.loadingUserRole = false;\n      });\n    }\n  },\n  mounted() {\n    this.toGetAllUsersCreated();\n    this.getAllUserRole();\n  }\n};","map":{"version":3,"mappings":"AAiGA;AACA;AACA;AACA;EACAA;IACA;MAEAC;MACAC;QACAF;MACA;MAEAG;QACAH;UACAI;QACA;MACA;MAEAC;MAEAC;MACAC;MACAC;MACAC;IACA;EACA;EAEAC;IAEA;IACA;MACA;MACA;QAAAC;MAAA;QACA;UACA;YACA;YACA;UACA,OACA;YACA;YACA;UACA;QACA,OACA;UACA;UACA;QACA;MACA;QACA;QACA;MACA;IACA;IAEA;IACA;MACA;QAAAA;MAAA;QACA;UACA;YACA;YACAC;YACAC;cACAD;YACA;UACA;YACAE;cACA;gBACA;cACA;YACA;UACA;QACA;UACA;UACAF;UACAC;YACAD;UACA;QACA;MACA;QACA;MACA;QACAG;MACA;IACA;IAEA;IACA;MACA;QAAAJ;MAAA;QACA;UACA;YACA;YACAC;YACAC;cACAD;YACA;UACA;YACAE;cACA;gBACA;cACA;YACA;UACA;QACA;UACA;UACAF;UACAC;YACAD;UACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;EAEA;EAEAI;IACA;IACA;EACA;AACA","names":["data","user","simpleObjectToSend","toActive","login","totalPermission","switch1","tab","items","text","methods","headers","$","setTimeout","response","console","mounted"],"sourceRoot":"src/components","sources":["UserInfo.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-container fluid class=\"mt-6\">\n            <v-tabs v-model=\"tab\" align-with-title>\n                <v-tabs-slider color=\"black\"></v-tabs-slider>\n                <v-tab> Vue d'ensemble </v-tab>\n                <v-tab> Opérations </v-tab>\n            </v-tabs>\n\n            <v-tabs-items v-model=\"tab\">\n                <v-tab-item key=\"Vue d'ensemble\" class=\"mt-6\">\n                    <v-card elevation=\"\">\n                        <v-card-text>\n                            <div class=\"row\">\n                                <div class=\"col-lg-6\"><span class=\"font-weight-bold\">Activités</span></div>    \n                                <div class=\"row\">\n                                    <div class=\"col-lg-12\">Compte crée le : {{ user.createdAt }}</div>\n                                    <div class=\"col-lg-12\">Dernière connexion le : {{ user.lastConnectionDate }}</div>\n                                </div>\n                            </div><br>\n                        </v-card-text>\n                            \n                    </v-card><br><br>\n\n                    <v-card elevation=\"\">\n                        <v-card-text>\n                            <div class=\"row\">\n                                <div class=\"col-lg-6\"><span class=\"font-weight-bold\">Informations Générales</span></div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-lg-6\"><span>Nom : {{ user.nom }}</span></div>\n                                <div class=\"col-lg-6\"><span>Prénom: {{ user.prenoms }}</span></div>      \n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-lg-6\"><span>E-mail: {{ user.email }}</span></div>\n                                <div class=\"col-lg-6\"><span>Pseudo: {{ user.login }}</span></div>      \n                            </div>\n                        </v-card-text>\n                            \n                    </v-card><br><br>\n\n                    <v-card elevation=\"\">\n                        <v-card-text>\n                            <div class=\"row\">\n                                <div class=\"col-lg-6\"><span class=\"font-weight-bold\">Role Utilisateur</span></div>\n                                <div class=\"col-lg-6\"><span>{{ user.roleCode }}</span></div>      \n                            </div>\n                        </v-card-text>\n                    </v-card>\n                </v-tab-item>\n                <v-tab-item key=\"Opérations\">\n                    <v-card elevation=\"\">\n                        <v-card-text>\n                            <div class=\"row\">\n                                <div class=\"col-lg-6\"><span class=\"font-weight-bold\">Status</span></div>\n                                <div class=\"col-lg-6\">\n                                    <v-chip v-if=\"user.isActif === false\" x-small color=\"red\"><span class=\"font-weight-bold status\">Inactive</span></v-chip>\n                                    <v-chip v-else-if=\"user.isActif === null\" x-small color=\"success\"><span class=\"font-weight-bold status\">Inactive</span></v-chip>\n                                    <v-chip v-else x-small color=\"success\"><span class=\"font-weight-bold status\">Active</span></v-chip>\n                                </div>      \n                            </div>\n                        </v-card-text>\n                    </v-card><br>\n\n                    <v-card elevation=\"\">\n                        <v-card-text>\n                            <div class=\"row\">\n                                <div class=\"col-lg-6\">\n                                    <span v-if=\"user.isActif == true\" class=\"font-weight-bold\">Activé</span>\n                                    <span v-if=\"user.isActif == false\" class=\"font-weight-bold\">Désactivé</span>\n                                </div>\n                                <div class=\"col-lg-6\">\n                                    <span v-if=\"user.isActif == false\"><v-switch @click=\"toActivedUser\" v-model=\"switch1\" inset color=\"success\"></v-switch></span>\n                                    <span v-else-if=\"user.isActif == null\"><v-switch disabled v-model=\"switch1\" inset color=\"success\"></v-switch></span>\n                                    <span v-else><v-switch disabled v-model=\"switch1\" inset color=\"success\"></v-switch></span>\n                                </div>      \n                            </div>\n                        </v-card-text>\n                    </v-card><br>\n\n                    <v-card elevation=\"\">\n                        <v-card-text>\n                            <div class=\"row\">\n                                <div class=\"col-lg-6\"><span class=\"font-weight-bold\">Total Permissions</span></div>\n                                <div class=\"col-lg-6\"><span>{{ totalPermission }}</span></div>      \n                            </div>\n                        </v-card-text>\n                    </v-card>\n                    \n                </v-tab-item>\n\n            </v-tabs-items>\n        </v-container>\n    </v-app>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport $ from \"jquery\"\nimport { API_GET_ALL_USERS_CREATED, API_ACTIVATE_USER , HEADERS , API_GET_ALL_ROLES } from \"@/components/globalConfig/globalConstConfig\"\nexport default {\n    data(){\n        return{\n\n            user: {},\n            simpleObjectToSend:{\n                data:{}\n            },\n\n            toActive:{\n                data:{\n                    login : null,\n                }\n            },\n\n            totalPermission : 0,\n\n            switch1: false,\n            tab: null,\n            items: [\"Vue d'ensemble\", \"Données\", \"Opérations\"],\n            text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n        }\n    },\n\n    methods:{\n\n        // ACTIVER UN UTILISATEUR\n        async toActivedUser(){\n            this.toActive.data.login = this.user.login\n            await axios.post(API_ACTIVATE_USER, this.toActive , { headers : HEADERS(this.$store.state.userAuthentified.token) }).then((response) => {\n                if (response.status == 200) {\n                    if (response.data.status.code != 800) {\n                        this.$swal.fire('Activation',response.data.status.message,'error')\n                        this.toActive.data.login = null;\n                    }\n                    else{\n                        this.$swal.fire('Activation',response.data.status.message,'success')\n                        this.toActive.data.login = null;\n                    }\n                }\n                else{\n                    this.$swal.fire('Activation','Error lors de la validation','error')\n                    this.toActive.data.login = null;\n                }\n            }).catch((e) => {\n                this.$swal.fire('Activation refusée' , e , 'error')\n                this.toActive.data.login = null;\n            })\n        },\n\n        // RECUPERER LA LISTE DES UTILISATEURS CREES SUR LA PLATEFORME\n        async toGetAllUsersCreated(){\n            await axios.post(API_GET_ALL_USERS_CREATED, this.simpleObjectToSend, { headers : HEADERS(this.$store.state.userAuthentified.token) }).then((response) => {\n                if (response.status == 200) {\n                    if (response.data.status.code != 800) {\n                        this.errorMsg = response.data.status.message\n                        $(\".alert-error\").fadeIn();\n                        setTimeout(function(){\n                            $(\".alert-error\").fadeOut(); \n                        }, 4000)\n                    }else{\n                        response.data.items.forEach(element => {\n                            if (element.nom  == this.$route.params.nom) {\n                                this.user = element; \n                            }\n                        });\n                    }\n                }else{\n                    this.errorMsg = \"Erreur\";\n                    $(\".alert-error\").fadeIn();\n                    setTimeout(function(){\n                        $(\".alert-error\").fadeOut(); \n                    }, 4000)\n                }\n            }).catch((e) => {\n                this.errorMsg = e\n            }).finally(() => {\n                console.log(\"Finally\")\n            })\n        },\n\n        //RECUPERER LA LISTE DES ROLES CRÉES\n        async getAllUserRole(){\n            await axios.post(API_GET_ALL_ROLES, {} , { headers : HEADERS(this.$store.state.userAuthentified.token) } ).then((response) => {\n                if (response.status == 200) {\n                    if (response.data.status.code != 800) {\n                        this.errorMsg = response.data.status.message\n                        $(\".alert-error\").fadeIn();\n                        setTimeout(function(){\n                            $(\".alert-error\").fadeOut(); \n                        }, 4000)\n                    }else{\n                        response.data.items.forEach(element => {\n                            if (element.code == this.user.roleCode) {\n                                this.totalPermission = element.datasFunctionalities.length\n                            }\n                        });\n                    }\n                }else{\n                    this.errorMsg = \"Erreur\";\n                    $(\".alert-error\").fadeIn();\n                    setTimeout(function(){\n                        $(\".alert-error\").fadeOut(); \n                    }, 4000)\n                }\n            }).catch((e) => {\n                this.errorMsg = e\n            }).finally(() => {\n                this.loadingUserRole = false;   \n            })\n        },\n\n    },\n\n    mounted(){\n        this.toGetAllUsersCreated();\n        this.getAllUserRole();\n    }\n}\n</script>\n\n<style scoped>\n.status{\n    color: white;\n}\n</style>\n\n"]},"metadata":{},"sourceType":"module"}