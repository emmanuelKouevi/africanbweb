{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { API_UPDATE_USER, HEADERS } from '../globalConfig/globalConstConfig';\nimport { required, minLength } from 'vuelidate/lib/validators';\nimport $ from 'jquery';\nexport default {\n  name: \"userProfil\",\n  data() {\n    return {\n      errorMsg: null,\n      successMsg: null,\n      overlay: null,\n      userDataUpdating: {\n        datas: []\n      },\n      userUpdating: {\n        id: null,\n        nom: null,\n        prenoms: null,\n        login: null,\n        roleCode: null\n      },\n      userUpdatingMail: null\n    };\n  },\n  validations: {\n    userUpdating: {\n      nom: {\n        required,\n        minLength: minLength(2)\n      },\n      prenoms: {\n        required,\n        minLength: minLength(2)\n      },\n      login: {\n        required,\n        minLength: minLength(2)\n      }\n    }\n  },\n  methods: {\n    // SOUMETTRE FORMULAIRE\n    submitForm() {\n      this.$v.$touch();\n      if (this.$v.userUpdating.$invalid) this.errorMsg = 'Certains champs sont requis';else this.updateUserProfil();\n    },\n    async retrieveUserInfo() {\n      /**\n       * RECUPERER LES DONNÉES UTILISATEURS\n       */\n      if (this.$store.state.userAuthentified !== null) {\n        this.userUpdating.id = this.$store.state.userAuthentified.id;\n        this.userUpdating.nom = this.$store.state.userAuthentified.nom;\n        this.userUpdating.prenoms = this.$store.state.userAuthentified.prenoms;\n        this.userUpdating.login = this.$store.state.userAuthentified.login;\n        this.userUpdatingMail = this.$store.state.userAuthentified.email;\n        this.userUpdating.roleCode = this.$store.state.userAuthentified.roleCode;\n      }\n    },\n    //MODIFIER COMPTE UTILISATEUR\n    async updateUserProfil() {\n      this.overlay = true;\n      this.userDataUpdating.datas.push(this.userUpdating);\n      await axios.put(API_UPDATE_USER, this.userDataUpdating, {\n        headers: HEADERS(this.$store.state.userAuthentified.token)\n      }).then(response => {\n        if (response.status == 200) {\n          if (response.data.status.code == 800) {\n            this.successMsg = response.data.status.message;\n            this.$swal.fire('Modification reussie', this.successMsg, 'success');\n            this.userDataUpdating.datas = [];\n            this.$store.commit('UPDATE_USER_PROFIL', response.data.items[0]);\n          } else {\n            this.errorMsg = response.data.status.message;\n            this.$swal.fire('Operation Echoué', this.errorMsg, 'error');\n            this.userDataUpdating.datas = [];\n          }\n        } else if (response.status == 204) {\n          this.warningMsg = \"Erreur , lors de la création\";\n          $(\".alert-warning\").fadeIn();\n          setTimeout(function () {\n            $(\".alert-warning\").fadeOut();\n          }, 3000);\n          this.userDataUpdating.datas = [];\n        } else {\n          this.errorMsg = \"Erreur , opération de création impossible\";\n          $(\".alert-error\").fadeIn();\n          setTimeout(function () {\n            $(\".alert-error\").fadeOut();\n          }, 3000);\n          this.userDataUpdating.datas = [];\n        }\n      }).catch(e => {\n        this.$swal.fire('Operation Echoué', e, 'error');\n        this.userDataToSend.datas = [];\n      }).finally(() => {\n        this.overlay = false;\n      });\n    }\n  },\n  computed: {\n    //CONTRAINTES SUR LES CHAMPS DE SAISIES\n\n    usernameError() {\n      const errors = [];\n      if (!this.$v.userUpdating.nom.$dirty) return errors;\n      !this.$v.userUpdating.nom.required && errors.push('Le nom de l\\'utilsateur est obligatoire.');\n      !this.$v.userUpdating.nom.minLength && errors.push('Au moins 2 caractères.');\n      return errors;\n    },\n    surnameError() {\n      const errors = [];\n      if (!this.$v.userUpdating.prenoms.$dirty) return errors;\n      !this.$v.userUpdating.prenoms.required && errors.push('Le prenom de l\\'utilsateur est obligatoire.');\n      !this.$v.userUpdating.prenoms.minLength && errors.push('Au moins 2 caractères.');\n      return errors;\n    },\n    loginError() {\n      const errors = [];\n      if (!this.$v.userUpdating.login.$dirty) return errors;\n      !this.$v.userUpdating.login.required && errors.push('Le login de l\\'utilsateur est obligatoire.');\n      !this.$v.userUpdating.login.minLength && errors.push('Au moins 2 caractères.');\n      return errors;\n    }\n  },\n  mounted() {\n    this.retrieveUserInfo();\n  }\n};","map":{"version":3,"names":["axios","API_UPDATE_USER","HEADERS","required","minLength","$","name","data","errorMsg","successMsg","overlay","userDataUpdating","datas","userUpdating","id","nom","prenoms","login","roleCode","userUpdatingMail","validations","methods","submitForm","$v","$touch","$invalid","updateUserProfil","retrieveUserInfo","$store","state","userAuthentified","email","push","put","headers","token","then","response","status","code","message","$swal","fire","commit","items","warningMsg","fadeIn","setTimeout","fadeOut","catch","e","userDataToSend","finally","computed","usernameError","errors","$dirty","surnameError","loginError","mounted"],"sources":["src/components/administrateur_societe/userProfil.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-form @submit.prevent=\"submitForm\">\n            <v-card class=\"mx-auto\" max-width=\"1000\">\n                <v-card-title><h4>MON PROFIL</h4></v-card-title>\n                <v-card-subtitle>Modifier votre compte utilisateur</v-card-subtitle>\n                <v-card-text>\n                    <v-container>\n                        <v-row>\n                            <v-col><v-text-field class=\"myInput\" :error-messages=\"usernameError\" v-model.trim=\"$v.userUpdating.nom.$model\" label=\"Nom\" outlined dense></v-text-field></v-col>\n                            <v-col><v-text-field class=\"myInput\" :error-messages=\"surnameError\" v-model.trim=\"$v.userUpdating.prenoms.$model\" label=\"Prénom\" outlined dense></v-text-field></v-col>\n                        </v-row>\n\n                        <v-row>\n                            <v-col><v-text-field class=\"myInput\" :error-messages=\"loginError\" v-model.trim=\"$v.userUpdating.login.$model\" label=\"Login ou Pseudo\" outlined dense></v-text-field></v-col>\n                            <v-col><v-text-field disabled class=\"myInput\" v-model=\"userUpdatingMail\" label=\"E-mail\" outlined dense></v-text-field></v-col>\n                        </v-row>\n\n                        <v-row>\n                            <v-col><v-text-field disabled class=\"myInput\" v-model=\"userUpdating.roleCode\" label=\"E-mail\" outlined dense></v-text-field></v-col>\n                        </v-row>\n                    </v-container>\n                </v-card-text>\n\n                <v-card-actions>\n                    <v-btn type=\"button\" small outlined color=\"secondary\">REINITIALISER</v-btn>\n                    <v-btn type=\"submit\" text small outlined color=\"primary\">ENREGISTRER LES MODIFICATIONS</v-btn>\n                </v-card-actions>\n            </v-card>\n        </v-form>\n        <v-alert class=\"myalert alert-error\" type=\"error\" width=\"350px\" dismissible>{{ errorMsg }}</v-alert>\n        <v-alert class=\"myalert alert-success\" type=\"success\" width=\"350px\" dismissible>{{ successMsg }}</v-alert>\n        <v-overlay :value=\"overlay\"><v-progress-circular indeterminate size=\"64\"></v-progress-circular></v-overlay>\n    </v-app>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { API_UPDATE_USER ,HEADERS } from '../globalConfig/globalConstConfig';\nimport {required , minLength} from 'vuelidate/lib/validators';\nimport $ from 'jquery';\nexport default {\n    name:\"userProfil\",\n    data(){\n        return{\n            errorMsg : null,\n            successMsg : null,\n            overlay : null,\n\n            userDataUpdating:{\n                datas:[]\n            },\n\n            userUpdating:{\n                id:null,\n                nom : null,\n                prenoms : null,\n                login : null,\n                roleCode:null,\n            },\n\n            userUpdatingMail:null\n        }\n    },\n\n    validations:{\n        userUpdating:{\n            nom:{\n                required,\n                minLength : minLength(2)\n            },\n            prenoms:{\n                required,\n                minLength : minLength(2)\n            },\n            login:{\n                required,\n                minLength : minLength(2)\n            }\n        }\n    },  \n\n    methods:{\n\n        // SOUMETTRE FORMULAIRE\n        submitForm(){\n            this.$v.$touch()\n            if(this.$v.userUpdating.$invalid)this.errorMsg = 'Certains champs sont requis';\n            else this.updateUserProfil();\n        },\n\n        async retrieveUserInfo(){\n            /**\n             * RECUPERER LES DONNÉES UTILISATEURS\n             */\n            if (this.$store.state.userAuthentified !== null) {\n                this.userUpdating.id = this.$store.state.userAuthentified.id;\n                this.userUpdating.nom = this.$store.state.userAuthentified.nom;\n                this.userUpdating.prenoms = this.$store.state.userAuthentified.prenoms;\n                this.userUpdating.login = this.$store.state.userAuthentified.login;\n                this.userUpdatingMail = this.$store.state.userAuthentified.email;\n                this.userUpdating.roleCode = this.$store.state.userAuthentified.roleCode\n            }\n        },\n\n        //MODIFIER COMPTE UTILISATEUR\n        async updateUserProfil(){\n            this.overlay = true;\n            this.userDataUpdating.datas.push(this.userUpdating)\n            await axios.put(API_UPDATE_USER, this.userDataUpdating , { headers : HEADERS(this.$store.state.userAuthentified.token) } ).then((response) => {\n                if (response.status == 200) {\n                    if (response.data.status.code == 800) {\n                        this.successMsg = response.data.status.message\n                        this.$swal.fire('Modification reussie' , this.successMsg , 'success')\n                        this.userDataUpdating.datas = [];\n                        this.$store.commit('UPDATE_USER_PROFIL' , response.data.items[0])\n                    }else{\n                        this.errorMsg = response.data.status.message\n                        this.$swal.fire('Operation Echoué' ,this.errorMsg, 'error')\n                        this.userDataUpdating.datas = [];\n                    }  \n                    \n                }\n                else if (response.status == 204) {\n                    this.warningMsg = \"Erreur , lors de la création\";\n                    $(\".alert-warning\").fadeIn();\n                    setTimeout(function(){\n                        $(\".alert-warning\").fadeOut(); \n                    }, 3000)\n                    this.userDataUpdating.datas = [];\n                }\n                else{\n                    this.errorMsg = \"Erreur , opération de création impossible\";\n                    $(\".alert-error\").fadeIn();\n                    setTimeout(function(){\n                        $(\".alert-error\").fadeOut(); \n                    }, 3000)\n                    this.userDataUpdating.datas = [];\n                }\n            }).catch((e) => {\n                this.$swal.fire('Operation Echoué' , e , 'error')\n                this.userDataToSend.datas = [];\n            }).finally(() => {\n                this.overlay = false;\n            })\n        }\n\n    },\n\n    computed:{\n        //CONTRAINTES SUR LES CHAMPS DE SAISIES\n\n        usernameError(){\n            const errors = [];\n            if (!this.$v.userUpdating.nom.$dirty) return errors\n            !this.$v.userUpdating.nom.required && errors.push('Le nom de l\\'utilsateur est obligatoire.')\n            !this.$v.userUpdating.nom.minLength && errors.push('Au moins 2 caractères.')\n            return errors \n        },\n\n\n        surnameError(){\n            const errors = [];\n            if (!this.$v.userUpdating.prenoms.$dirty) return errors\n            !this.$v.userUpdating.prenoms.required && errors.push('Le prenom de l\\'utilsateur est obligatoire.')\n            !this.$v.userUpdating.prenoms.minLength && errors.push('Au moins 2 caractères.')\n            return errors \n        },\n\n        loginError(){\n            const errors = [];\n            if (!this.$v.userUpdating.login.$dirty) return errors\n            !this.$v.userUpdating.login.required && errors.push('Le login de l\\'utilsateur est obligatoire.')\n            !this.$v.userUpdating.login.minLength && errors.push('Au moins 2 caractères.')\n            return errors \n        },\n    },\n\n    mounted(){\n        this.retrieveUserInfo();\n    }\n}\n</script>\n\n<style scoped>\n    .myalert{\n        display: none;\n        z-index: 1900;\n    }\n\n    .alert-success{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n\n    .alert-error{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n\n    .alert-warning{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n\n    .myInput{\n        font-weight: bolder;\n        color: grey;\n        font-size: 15px;\n    }\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}