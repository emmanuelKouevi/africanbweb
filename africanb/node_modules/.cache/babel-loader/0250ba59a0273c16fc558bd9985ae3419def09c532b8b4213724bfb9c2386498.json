{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { API_OBTENIR_LISTE_DES_DEMANDES_ADHESIONS_VALIDEES, API_OBTENIR_LISTE_DE_TOUTES_LES_DEMANDES_ADHESIONS, HEADERS } from '../globalConfig/globalConstConfig';\nimport axios from 'axios';\nimport $ from 'jquery';\nexport default {\n  name: 'SelectionnerDemandeAdhesionCompagnie',\n  data() {\n    return {\n      errorMsg: null,\n      successMsg: null,\n      warningMsg: null,\n      demandeAdhesionList: [],\n      demandeAdhesionValidesList: [],\n      demandeAdhesionNonValides: 0,\n      demandeAdhesionValides: 0,\n      search: '',\n      headers: [{\n        text: 'Designation',\n        value: 'designation'\n      }, {\n        text: 'Compagnie',\n        value: 'raisonSociale'\n      }, {\n        text: 'E-mail',\n        value: 'email'\n      }, {\n        text: 'Status',\n        value: 'isValidate'\n      }, {\n        text: 'Actions',\n        value: 'actions',\n        sortable: false\n      }],\n      loading: true,\n      options: {\n        index: 0,\n        size: 8\n      }\n    };\n  },\n  methods: {\n    verifierInfosDemandeAdhesion(demandeAdhesion) {\n      console.log(demandeAdhesion);\n      this.$router.push({\n        name: \"InfosAdhesion\",\n        params: {\n          raisonSociale: demandeAdhesion.raisonSociale\n        }\n      });\n    },\n    verifierInfosDemandeAdhesionValide(demandeAdhesion) {\n      console.log(demandeAdhesion);\n      this.$router.push({\n        name: \"InfosAdhesionValide\",\n        params: {\n          raisonSociale: demandeAdhesion.raisonSociale\n        }\n      });\n    },\n    //OBTENIR LA LISTE DE TOUTES LES DEMANDE D'ADHESIONS EFFECTUÉS\n    async obtenirToutesLesDemandesAdhesion() {\n      this.loading = false;\n      axios.post(API_OBTENIR_LISTE_DE_TOUTES_LES_DEMANDES_ADHESIONS, this.options, {\n        headers: HEADERS(this.$store.state.userAuthentified.token)\n      }).then(response => {\n        if (response.status == 200) {\n          if (response.data.status.code != 800) {\n            this.errorMsg = response.data.status.message;\n            $(\".alert-error\").fadeIn();\n            setTimeout(function () {\n              $(\".alert-error\").fadeOut();\n            }, 4000);\n          } else {\n            this.demandeAdhesionList = response.data.items;\n            console.log(this.demandeAdhesionList);\n            this.demandeAdhesionList.forEach(element => {\n              if (element.isValidate == true) {\n                this.demandeAdhesionValides += 1;\n              } else {\n                this.demandeAdhesionNonValides += 1;\n              }\n            });\n          }\n        } else {\n          this.errorMsg = \"Erreur\";\n        }\n      }).catch(e => {\n        this.errorMsg = e;\n      });\n    },\n    // OBTENIR LA LISTE DES DEMANDES D'ADHESIONS VALIDÉES\n    async obtenirDemandeAdhesionValidees() {\n      this.loading = false;\n      axios.post(API_OBTENIR_LISTE_DES_DEMANDES_ADHESIONS_VALIDEES, this.options, {\n        headers: HEADERS(this.$store.state.userAuthentified.token)\n      }).then(response => {\n        if (response.status == 200) {\n          if (response.data.status.code != 800) {\n            this.errorMsg = response.data.status.message;\n            $(\".alert-error\").fadeIn();\n            setTimeout(function () {\n              $(\".alert-error\").fadeOut();\n            }, 4000);\n          } else {\n            console.log(response.data.items);\n            this.demandeAdhesionValidesList = response.data.items;\n          }\n        } else {\n          this.errorMsg = \"Erreur\";\n        }\n      }).catch(e => {\n        this.errorMsg = e;\n      });\n    }\n  },\n  mounted() {\n    this.obtenirToutesLesDemandesAdhesion();\n    this.obtenirDemandeAdhesionValidees();\n  }\n};","map":{"version":3,"names":["API_OBTENIR_LISTE_DES_DEMANDES_ADHESIONS_VALIDEES","API_OBTENIR_LISTE_DE_TOUTES_LES_DEMANDES_ADHESIONS","HEADERS","axios","$","name","data","errorMsg","successMsg","warningMsg","demandeAdhesionList","demandeAdhesionValidesList","demandeAdhesionNonValides","demandeAdhesionValides","search","headers","text","value","sortable","loading","options","index","size","methods","verifierInfosDemandeAdhesion","demandeAdhesion","console","log","$router","push","params","raisonSociale","verifierInfosDemandeAdhesionValide","obtenirToutesLesDemandesAdhesion","post","$store","state","userAuthentified","token","then","response","status","code","message","fadeIn","setTimeout","fadeOut","items","forEach","element","isValidate","catch","e","obtenirDemandeAdhesionValidees","mounted"],"sources":["src/components/administrateur_societe/SelectionnerDemandeAdhesionCompagnie.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-container fluid>\n\n            <div class=\"jumbotron\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <v-card rounded=\"lg\">\n                            <v-card-title><span class=\"card-title-text\">D.Adhesion en attentes</span></v-card-title>\n                            <v-card-text>\n                                <v-container>\n                                    <v-row justify=\"center\">\n                                        <span class=\"libelle font-weight-bold\">{{ demandeAdhesionList.length }}</span>\n                                    </v-row>\n                                </v-container>\n                            </v-card-text>\n                        </v-card>\n                    </div>\n\n                    <div class=\"col-sm\">\n                        <v-card rounded=\"lg\">\n                            <v-card-title><span class=\"card-title-text\">D.Adhesion validées</span></v-card-title>\n                            <v-card-text>\n                                <v-container>\n                                    <v-row justify=\"center\">\n                                        <span class=\"libelle font-weight-bold\">{{ demandeAdhesionValidesList.length }}</span>\n                                    </v-row>\n                                </v-container>\n                            </v-card-text>\n                        </v-card>\n                    </div>\n\n                    <div class=\"col-sm\">\n                        <v-card rounded=\"lg\">\n                            <v-card-title><span class=\"card-title-text\">D.Adhesion non validées</span></v-card-title>\n                            <v-card-text>\n                                <v-container>\n                                    <v-row justify=\"center\">\n                                        <span class=\"libelle font-weight-bold\">{{ demandeAdhesionNonValides }}</span>\n                                    </v-row>\n                                </v-container>\n                            </v-card-text>\n                        </v-card>\n                    </div>\n                </div>\n            </div>\n\n            <v-card width=\"1800\">\n                <v-card-title class=\"title-card\">DEMANDE D'ADHÉSIONS SANS DECISIONS\n                    <v-spacer></v-spacer>\n                    <v-text-field v-model=\"search\" append-icon=\"mdi-magnify\" label=\"Search\" single-line hide-details></v-text-field>\n                </v-card-title>\n                <v-data-table :headers=\"headers\" :items=\"demandeAdhesionList\" :search=\"search\" :loading=\"loading\">\n\n                    <template v-slot:[`item.isValidate`]=\"{ item }\">\n                        <v-chip x-small v-if=\"item.isValidate == true\" color=\"teal\" text-color=\"white\" class=\"mr-2\"><span class=\"etat font-weight-bold\">Valide</span></v-chip>\n                        <v-chip x-small v-else color=\"secondary\" text-color=\"white\" class=\"mr-2\"><span class=\"etat\">Non validé</span></v-chip>\n                    </template>\n\n                    <template v-slot:[`item.actions`]=\"{ item }\">\n                        <v-btn x-small text @click=\"verifierInfosDemandeAdhesion(item)\">voir détail</v-btn>\n                    </template>\n                \n                </v-data-table>\n                <v-alert class=\"myalert alert-error\" type=\"error\" width=\"350px\" dismissible>{{ errorMsg }}</v-alert>\n            </v-card><br><br>\n\n            <v-card width=\"1800\">\n                <v-card-title class=\"title-card\">DEMANDE D'ADHÉSIONS VALIDÉES\n                    <v-spacer></v-spacer>\n                    <v-text-field v-model=\"search\" append-icon=\"mdi-magnify\" label=\"Search\" single-line hide-details></v-text-field>\n                </v-card-title>\n                <v-data-table :headers=\"headers\" :items=\"demandeAdhesionValidesList\" :search=\"search\" :loading=\"loading\">\n\n                    <template v-slot:[`item.isValidate`]=\"{ item }\">\n                        <v-chip x-small v-if=\"item.isValidate == true\" color=\"teal\" text-color=\"white\" class=\"mr-2\"><span class=\"etat font-weight-bold\">Valide</span></v-chip>\n                        <v-chip x-small v-else color=\"secondary\" text-color=\"white\" class=\"mr-2\"><span class=\"etat\">Non validé</span></v-chip>\n                    </template>\n\n                    <template v-slot:[`item.actions`]=\"{ item }\">\n                        <v-btn x-small text @click=\"verifierInfosDemandeAdhesionValide(item)\">voir détail</v-btn>\n                    </template>\n                \n                </v-data-table>\n                <v-alert class=\"myalert alert-error\" type=\"error\" width=\"350px\" dismissible>{{ errorMsg }}</v-alert>\n            </v-card>\n        </v-container>\n    </v-app>\n</template>\n\n<script>\n\nimport { API_OBTENIR_LISTE_DES_DEMANDES_ADHESIONS_VALIDEES , API_OBTENIR_LISTE_DE_TOUTES_LES_DEMANDES_ADHESIONS, HEADERS } from '../globalConfig/globalConstConfig'\nimport axios from 'axios'\nimport $ from 'jquery'\nexport default {\n    name:'SelectionnerDemandeAdhesionCompagnie',\n    data(){\n        return{\n            errorMsg:null,\n            successMsg:null,\n            warningMsg:null,\n\n            demandeAdhesionList: [],\n            demandeAdhesionValidesList: [],\n            demandeAdhesionNonValides:0,\n            demandeAdhesionValides:0,\n\n            search : '',\n            headers:[\n                {text : 'Designation' , value : 'designation'},\n                {text : 'Compagnie' , value : 'raisonSociale'},\n                {text : 'E-mail' , value : 'email'},\n                {text : 'Status' , value : 'isValidate'},\n                {text : 'Actions' , value : 'actions' , sortable : false}\n            ],\n            loading:true,\n\n            options:{\n                index:0,\n                size:8\n            }\n        }\n    },\n\n    methods:{\n\n        verifierInfosDemandeAdhesion(demandeAdhesion){\n            console.log(demandeAdhesion)\n            this.$router.push({name:\"InfosAdhesion\" , params:{raisonSociale:demandeAdhesion.raisonSociale}} )\n        },\n\n        verifierInfosDemandeAdhesionValide(demandeAdhesion){\n            console.log(demandeAdhesion)\n            this.$router.push({name:\"InfosAdhesionValide\" , params:{raisonSociale:demandeAdhesion.raisonSociale}} )\n        },\n        \n\n        //OBTENIR LA LISTE DE TOUTES LES DEMANDE D'ADHESIONS EFFECTUÉS\n        async obtenirToutesLesDemandesAdhesion(){\n            this.loading = false;\n            axios.post(API_OBTENIR_LISTE_DE_TOUTES_LES_DEMANDES_ADHESIONS , this.options, { headers : HEADERS(this.$store.state.userAuthentified.token) }).then((response) => {\n                if (response.status == 200) {\n                    if (response.data.status.code != 800) {\n                        this.errorMsg = response.data.status.message\n                        $(\".alert-error\").fadeIn();\n                        setTimeout(function(){\n                            $(\".alert-error\").fadeOut(); \n                        }, 4000)\n                    }else{\n                        this.demandeAdhesionList = response.data.items;\n                        console.log(this.demandeAdhesionList)\n                        this.demandeAdhesionList.forEach(element => {\n                            if (element.isValidate == true) {\n                                this.demandeAdhesionValides += 1;\n                            }else{\n                                this.demandeAdhesionNonValides += 1;\n                            }\n                        });\n                    }\n                }else{\n                    this.errorMsg = \"Erreur\";\n                }\n            }).catch((e) => {\n                this.errorMsg = e\n            })\n        },\n\n        // OBTENIR LA LISTE DES DEMANDES D'ADHESIONS VALIDÉES\n        async obtenirDemandeAdhesionValidees(){\n            this.loading = false;\n            axios.post(API_OBTENIR_LISTE_DES_DEMANDES_ADHESIONS_VALIDEES , this.options, { headers : HEADERS(this.$store.state.userAuthentified.token) }).then((response) => {\n                if (response.status == 200) {\n                    if (response.data.status.code != 800) {\n                        this.errorMsg = response.data.status.message\n                        $(\".alert-error\").fadeIn();\n                        setTimeout(function(){\n                            $(\".alert-error\").fadeOut(); \n                        }, 4000)\n                    }else{\n                        console.log(response.data.items)\n                        this.demandeAdhesionValidesList = response.data.items;\n                    }\n                }else{\n                    this.errorMsg = \"Erreur\";\n                }\n            }).catch((e) => {\n                this.errorMsg = e\n            })\n        },\n\n    },\n\n    mounted(){\n        this.obtenirToutesLesDemandesAdhesion();\n        this.obtenirDemandeAdhesionValidees();\n    }\n}\n</script>\n\n<style scoped>\n    .title-card{\n        font-weight: bold;\n        color: black;\n        font-size: 17px;\n    }\n\n    .myalert{\n        display: none;\n        z-index: 1900;\n    }\n\n    .alert-error{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}