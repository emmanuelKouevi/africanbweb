{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { API_LOGIN_USER } from '../globalConfig/globalConstConfig';\nimport { required } from 'vuelidate/lib/validators';\nexport default {\n  name: \"LoginVue\",\n  data() {\n    return {\n      overlay: false,\n      passwordIsVisible: false,\n      userLoginData: {\n        data: {\n          login: null,\n          password: null\n        }\n      },\n      userLogin: {\n        login: null,\n        password: null\n      }\n    };\n  },\n  validations: {\n    userLogin: {\n      login: {\n        required\n      },\n      password: {\n        required\n      }\n    }\n  },\n  methods: {\n    //SOUMISSION FORMULAIRE\n    submitForm() {},\n    // SERVICE WEB PERMETTANT DE SE CONNECTER ET D'ACCEDER À SON ESPACE PERSONNEL\n    async login() {\n      this.userLoginData.data.login = this.userLogin.login;\n      this.userLoginData.data.password = this.userLogin.password;\n      await axios.post(API_LOGIN_USER, this.userLoginData).then(response => {\n        if (response.status == 200) {\n          if (response.data.status.code == 800) {\n            this.$store.commit('LOGIN_USER');\n            this.$store.commit('SET_USER_AUTHENTIFIED', response.data.item);\n            this.$router.push('/tableauBord');\n            localStorage.setItem(\"auth\", true);\n            const user_info = JSON.stringify(response.data.item);\n            localStorage.setItem(\"token_user\", user_info);\n          } else {\n            this.$swal.fire('Connexion échouée', 'Error lors de la connexion', 'error');\n          }\n        } else {\n          this.$swal.fire('Connexion Impossible', 'Problème interne', 'error');\n        }\n      }).catch(e => {\n        this.$swal.fire('Connexion Impossible', e, 'error');\n      });\n    },\n    /**\n     * Cette methode permettra de détecter si nous sommes sur la page de connexion (/connexion).\n     * Si c'est le cas , l'utilisateur perd sa session et sera invité de saisir \n     * à nouveau ses paramètres de connexion\n     */\n    initializeSession() {}\n  },\n  computed: {\n    //GESTION DES CONTRAINTES (SAISIE UTILISATEUR)\n    usernameError() {\n      const errors = [];\n      if (!this.$v.userLogin.login.$dirty) return errors;\n      !this.$v.userLogin.login.required && errors.push('Entrer votre pseudo ou e-mail de connexion.');\n      return errors;\n    },\n    passwordError() {\n      const errors = [];\n      if (!this.$v.userLogin.password.$dirty) return errors;\n      !this.$v.userLogin.password.required && errors.push('Entrer votre mot de passe.');\n      return errors;\n    }\n  },\n  mounted() {}\n};","map":{"version":3,"mappings":";AAqEA;AACA;AACA;AACA;EACAA;EACAC;IACA;MACAC;MACAC;MAEAC;QACAH;UACAI;UACAC;QACA;MACA;MAEAC;QACAF;QACAC;MACA;IAEA;EACA;EAEAE;IAEAD;MACAF;QACAI;MACA;MAEAH;QACAG;MACA;IACA;EAEA;EAEAC;IAEA;IACAC,cAEA;IAEA;IACA;MACA;MACA;MACA;QACA;UACA;YACA;YACA;YACA;YACAC;YACA;YACAA;UACA;YACA;UACA;QACA;UACA;QACA;MACA;QACA;MACA;IACA;IAGA;AACA;AACA;AACA;AACA;IACAC,qBAEA;EACA;EAEAC;IAEA;IACAC;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;IACA;EAEA;EAEAC,WAEA;AACA","names":["name","data","overlay","passwordIsVisible","userLoginData","login","password","userLogin","validations","required","methods","submitForm","localStorage","initializeSession","computed","usernameError","passwordError","mounted"],"sourceRoot":"src/components/Auth","sources":["Login.vue"],"sourcesContent":["<template>\n    <v-app class=\"body\">  \n        <v-main class=\"my-container\">\n            <div>\n                <v-container>\n                    <v-form @submit.prevent=\"login\">\n                        <v-card max-width=\"400\" max-height=\"1000\" elevation=\"5\">\n                            <v-row justify=\"center\" align=\"center\">\n                                <v-img max-height=\"60\" max-width=\"60\" src=\"../../assets/UB.jpg\"></v-img>\n                            </v-row>\n                        \n                            <v-card-text>\n                                <v-container>\n                                    <v-row justify=\"center\">\n                                        <div class=\"text_auth\">\n                                            <h5 class=\"font-weight-bold\">BIENVENUE</h5>\n                                            <small>Entrer vos paramètres de connexion pour accéder à votre espace de travail.</small>\n                                        </div>\n\n                                        <v-container>\n                                            <div class=\"form-group\">\n                                                <label for=\"pseudoOrEmail\" class=\"myLabel\">Identifiant ou E-mail</label>\n                                                <v-text-field class=\"input_field\" id=\"pseudoOrEmail\" :error-messages=\"usernameError\" \n                                                    v-model.trim=\"$v.userLogin.login.$model\" dense outlined \n                                                    prepend-inner-icon=\"mdi-account\" \n                                                    color=\"#273c75\">\n                                                </v-text-field>\n                                            </div>\n\n                                            <div class=\"form-group\">\n                                                <label for=\"login_password\" class=\"myLabel\">Mot de Passe</label>\n                                                <v-text-field :error-messages=\"passwordError\" v-model.trim=\"$v.userLogin.password.$model\" :append-icon=\"passwordIsVisible ? 'mdi-eye' : 'mdi-eye-off'\"  \n                                                    class=\"input_field\" id=\"login_password\" \n                                                    @click:append=\"passwordIsVisible = !passwordIsVisible\"\n                                                    dense outlined prepend-inner-icon=\"mdi-lock-check\" color=\"#273c75\" :type=\"passwordIsVisible ? 'text' : 'password'\">\n                                                </v-text-field>\n                                            </div>\n\n                                            <span>Vous avez oublié votre mot de passe ? <small class=\"password_forget\">Cliquez-ici</small></span><br><br><br>\n\n                                            <v-row justify=\"center\">\n                                                <div class=\"text-xs-center\">\n                                                    <v-btn small type=\"submit\" rounded color=\"#192a56\"><span class=\"connexion_text\">CONNEXION</span></v-btn>\n                                                </div>\n                                            </v-row>\n                                        </v-container><br>                        \n                                    </v-row>\n                                </v-container>\n                            </v-card-text>    \n                        </v-card>\n                    </v-form><br><br>\n                </v-container>\n            </div>\n        </v-main><br>\n\n        <v-footer class=\"footer\" dark>\n            <v-container fluid>\n                <v-row>\n                    <v-col class=\"text-center\">\n                        <span class=\"font-weight-bold\">© copyright 2023 - African bus. Tous droits réservés</span>\n                    </v-col>\n                </v-row>\n            </v-container>\n        </v-footer>\n        <v-overlay :value=\"overlay\"><v-progress-circular  indeterminate size=\"64\"></v-progress-circular></v-overlay>\n    </v-app>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { API_LOGIN_USER } from '../globalConfig/globalConstConfig'\nimport { required } from 'vuelidate/lib/validators'\nexport default {\n    name:\"LoginVue\",\n    data(){\n        return{\n            overlay : false ,\n            passwordIsVisible : false ,\n\n            userLoginData:{\n                data :{\n                    login : null,\n                    password : null\n                }\n            },\n\n            userLogin :{\n                login: null,\n                password:null,\n            },\n\n        }\n    },\n\n    validations:{\n\n        userLogin:{\n            login:{\n                required\n            },\n\n            password:{\n                required\n            }\n        }\n\n    },\n\n    methods:{\n\n        //SOUMISSION FORMULAIRE\n        submitForm(){\n            \n        },\n\n        // SERVICE WEB PERMETTANT DE SE CONNECTER ET D'ACCEDER À SON ESPACE PERSONNEL\n        async login(){\n            this.userLoginData.data.login = this.userLogin.login;\n            this.userLoginData.data.password = this.userLogin.password; \n            await axios.post(API_LOGIN_USER,this.userLoginData).then((response) => {\n                if (response.status == 200) {\n                    if (response.data.status.code == 800) {\n                        this.$store.commit('LOGIN_USER');\n                        this.$store.commit('SET_USER_AUTHENTIFIED' , response.data.item);\n                        this.$router.push('/tableauBord')\n                        localStorage.setItem(\"auth\", true);\n                        const user_info = JSON.stringify(response.data.item)\n                        localStorage.setItem(\"token_user\", user_info);\n                    }else{\n                        this.$swal.fire('Connexion échouée','Error lors de la connexion','error')\n                    }  \n                }else{\n                    this.$swal.fire('Connexion Impossible','Problème interne','error')\n                }\n            }).catch((e) => {\n                this.$swal.fire('Connexion Impossible' , e , 'error')\n            })\n        },\n\n\n        /**\n         * Cette methode permettra de détecter si nous sommes sur la page de connexion (/connexion).\n         * Si c'est le cas , l'utilisateur perd sa session et sera invité de saisir \n         * à nouveau ses paramètres de connexion\n         */\n        initializeSession() {\n\n        }\n    },\n\n    computed:{\n        \n        //GESTION DES CONTRAINTES (SAISIE UTILISATEUR)\n        usernameError(){\n            const errors = [];\n            if (!this.$v.userLogin.login.$dirty) return errors\n            !this.$v.userLogin.login.required && errors.push('Entrer votre pseudo ou e-mail de connexion.')\n            return errors \n        },\n\n        passwordError(){\n            const errors = [];\n            if (!this.$v.userLogin.password.$dirty) return errors\n            !this.$v.userLogin.password.required && errors.push('Entrer votre mot de passe.')\n            return errors \n        }\n\n    },\n\n    mounted(){\n\n    }\n}\n</script>\n\n<style scoped>\n    .body{\n        background: teal;\n    }\n\n    .my-container{\n        \n        margin: auto;\n        margin-top: 50px;\n        right: 0;\n        bottom: 0;\n        left: 0;\n    }\n    .title{\n        padding-top: 40px;\n        color: black;\n        font-weight: bold;\n        font-size: 60px;\n    }\n\n    .connexion_text{\n        color: white;\n    }\n\n    .password_forget{\n        font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n        font-size: 13px;\n        color: black;\n        opacity: 0.9;\n        font-weight: bolder;\n    }\n\n\n    .password_forget:hover{\n        cursor: pointer;\n        color: #487eb0;\n    }\n\n    .label{\n        font-size: 15px;\n        font-weight: bold;\n    }\n\n    .text_auth{\n        text-align: center;\n    }\n\n    .text_auth small{\n        color: grey;\n    }\n\n    .input_field {\n        font-family: Arial, Helvetica, sans-serif;\n        font-weight: bolder;\n        color: #596275;\n    }\n\n    .footer{\n        color: white;\n    }\n\n    .myLabel{\n        font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n        font-size: 13px;\n        color: black;\n        opacity: 0.9;\n        font-weight: bolder;\n    }\n\n    .header_card{\n        height: 10px;\n        background: linear-gradient(to left top, black, #273c75);\n    }\n\n    .card-subtitle{\n        color:black;\n        font-size: 13px;\n        opacity: 0.7;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}