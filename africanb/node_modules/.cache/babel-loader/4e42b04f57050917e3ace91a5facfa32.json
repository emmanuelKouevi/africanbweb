{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { required } from 'vuelidate/lib/validators';\nimport axios from 'axios';\nimport { API_OBTENIR_REFERENCE_PAR_PAR_FAMILLE, API_MODIFIER_MODE_PAIEMENT, HEADERS } from '../globalConfig/globalConstConfig';\nimport $ from 'jquery';\nexport default {\n  name: 'ModeModePaiement',\n  data() {\n    return {\n      errorMsg: null,\n      successMsg: null,\n      overlay: false,\n      referenceTypePaiementList: [],\n      referenceModePaiement: {\n        referenceFamilleDesignation: \"referenceFamilleModePaiement\"\n      },\n      objectToSendReferenceModePaiement: {\n        datas: []\n      },\n      modePaiementModel: {\n        id: null,\n        designation: null,\n        telephoneGenerique: null,\n        typeModePaiementDesignation: null,\n        compagnieTransportRaisonSociale: \"KOUEVI CT\"\n      },\n      modePaiementToModify: {\n        datas: []\n      }\n    };\n  },\n  validations: {\n    modePaiementModel: {\n      designation: {\n        required\n      },\n      telephoneGenerique: {\n        required\n      },\n      typeModePaiementDesignation: {\n        required\n      }\n    }\n  },\n  methods: {\n    //SOUMISSION DU FORMULAIRE\n    submitForm() {\n      this.modifierModePaiement();\n    },\n    //OBTENIR REFERENCE DESIGNATION MODE DE PAIEMENT\n    async obtenirReferenceModePaiementList() {\n      this.objectToSendReferenceModePaiement.datas.push(this.referenceModePaiement);\n      await axios.post(API_OBTENIR_REFERENCE_PAR_PAR_FAMILLE, this.objectToSendReferenceModePaiement, {\n        headers: HEADERS(this.$store.state.userAuthentified.token)\n      }).then(response => {\n        this.referenceTypePaiementList = response.data.items;\n      }).catch(e => {\n        this.errorMsg = e;\n        $(\".alert-error\").fadeIn();\n        setTimeout(function () {\n          $(\".alert-error\").fadeOut();\n        }, 4000);\n      });\n    },\n    // MODIFICATION D'UN MODE DE PAIEMENT\n    async modifierModePaiement() {\n      this.modePaiementToModify.datas.push(this.modePaiementModel);\n      this.overlay = true;\n      await axios.post(API_MODIFIER_MODE_PAIEMENT, this.modePaiementToModify, {\n        headers: HEADERS(this.$store.state.userAuthentified.token)\n      }).then(response => {\n        if (response.status == 200) {\n          if (response.data.status.code == 800) {\n            this.successMsg = response.data.status.message;\n            $(\".alert-success\").fadeIn();\n            setTimeout(function () {\n              $(\".alert-success\").fadeOut();\n            }, 4000);\n            this.modePaiementToModify.datas = [];\n          } else {\n            this.errorMsg = response.data.status.message;\n            $(\".alert-error\").fadeIn();\n            setTimeout(function () {\n              $(\".alert-error\").fadeOut();\n            }, 3000);\n            this.modePaiementToModify.datas = [];\n          }\n        } else if (response.status == 204) {\n          this.warningMsg = \"Erreur , lors de la création de l'offre de voyage\";\n          $(\".alert-warning\").fadeIn();\n          setTimeout(function () {\n            $(\".alert-warning\").fadeOut();\n          }, 3000);\n          this.modePaiementToModify.datas = [];\n        } else {\n          this.errorMsg = \"Erreur , opération de création impossible\";\n          $(\".alert-error\").fadeIn();\n          setTimeout(function () {\n            $(\".alert-error\").fadeOut();\n          }, 3000);\n          this.modePaiementToModify.datas = [];\n        }\n      }).catch(e => {\n        this.errorMsg = e;\n        $(\".alert-error\").fadeIn();\n        setTimeout(function () {\n          $(\".alert-error\").fadeOut();\n        }, 4000);\n        this.modePaiementToModify.datas = [];\n      }).finally(() => {\n        this.overlay = false;\n      });\n    },\n    //MODE EDITION MODE PAIEMENT\n    async editerModePaiement() {\n      if (localStorage.getItem(\"modePaiement\")) {\n        try {\n          const modePaiementEditing = JSON.parse(localStorage.getItem(\"modePaiement\"));\n          console.log(modePaiementEditing);\n          this.modePaiementModel.id = modePaiementEditing.id;\n          this.modePaiementModel.designation = modePaiementEditing.designation;\n          this.modePaiementModel.telephoneGenerique = modePaiementEditing.telephoneGenerique;\n          this.modePaiementModel.typeModePaiementDesignation = modePaiementEditing.typeModePaiementDesignation;\n          localStorage.removeItem(\"modePaiement\");\n        } catch (error) {\n          localStorage.removeItem(\"modePaiement\");\n        }\n      } else {\n        this.$router.replace({\n          path: '/selectionnerModeAbonnementEtPaiement'\n        });\n      }\n    }\n  },\n  computed: {\n    // GESTION DES CONTRAINTES DE CHAMPS D'ENTREES POUR LA CREATION D'UN MODE DE PAIEMENT\n    designationPaiementErrors() {\n      const errors = [];\n      if (!this.$v.modePaiementModel.designation.$dirty) return errors;\n      !this.$v.modePaiementModel.designation.required && errors.push('La désignation est obligatoire.');\n      return errors;\n    },\n    telephoneGeneriqueErrors() {\n      const errors = [];\n      if (!this.$v.modePaiementModel.telephoneGenerique.$dirty) return errors;\n      !this.$v.modePaiementModel.telephoneGenerique.required && errors.push('Entrer un numero de téléphone.');\n      return errors;\n    },\n    typePaiementErrors() {\n      const errors = [];\n      if (!this.$v.modePaiementModel.typeModePaiementDesignation.$dirty) return errors;\n      !this.$v.modePaiementModel.typeModePaiementDesignation.required && errors.push('La selection du type de paiement est obligatoire.');\n      return errors;\n    }\n  },\n  mounted() {\n    this.obtenirReferenceModePaiementList();\n    this.editerModePaiement();\n  }\n};","map":{"version":3,"mappings":";AAmCA;AACA;AACA;AACA;AACA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MAEAC;MAEAC;QACAC;MACA;MAEAC;QACAC;MACA;MAEAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MAEAC;QACAP;MACA;IACA;EACA;EAEAQ;IAEAP;MACAE;QACAM;MACA;MACAL;QACAK;MACA;MACAJ;QACAI;MACA;IACA;EAEA;EAEAC;IAEA;IACAC;MACA;IACA;IAEA;IACA;MACA;MACA;QAAAC;MAAA;QACA;MACA;QACA;QACAC;QACAC;UACAD;QACA;MACA;IACA;IAEA;IACA;MACA;MACA;MACA;QAAAD;MAAA;QACA;UACA;YACA;YACAC;YACAC;cACAD;YACA;YACA;UACA;YACA;YACAA;YACAC;cACAD;YACA;YACA;UACA;QAEA,OACA;UACA;UACAA;UACAC;YACAD;UACA;UACA;QACA,OACA;UACA;UACAA;UACAC;YACAD;UACA;UACA;QACA;MACA;QACA;QACAA;QACAC;UACAD;QACA;QACA;MACA;QACA;MACA;IACA;IAGA;IACA;MACA;QACA;UACA;UACAE;UACA;UACA;UACA;UACA;UACAC;QACA;UACAA;QACA;MACA;QACA;UAAAC;QAAA;MACA;IACA;EAEA;EAEAC;IAEA;IACAC;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;IACA;EACA;EAEAC;IACA;IACA;EACA;AACA","names":["name","data","errorMsg","successMsg","overlay","referenceTypePaiementList","referenceModePaiement","referenceFamilleDesignation","objectToSendReferenceModePaiement","datas","modePaiementModel","id","designation","telephoneGenerique","typeModePaiementDesignation","compagnieTransportRaisonSociale","modePaiementToModify","validations","required","methods","submitForm","headers","$","setTimeout","console","localStorage","path","computed","designationPaiementErrors","telephoneGeneriqueErrors","typePaiementErrors","mounted"],"sourceRoot":"src/components/administration_compagnie_transport","sources":["ModifierModePaiement.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-form @submit.prevent=\"submitForm\">\n            <v-container fluid>\n                <v-card width=\"1200\" elevation=\"3\">\n                    <v-card-title>MODE DE PAIEMENTS</v-card-title>\n                    <v-card-subtitle>Modifiez vos modes de paiements</v-card-subtitle>\n                    <v-container>\n                        <v-row>\n                            <v-col>\n                                <v-text-field :error-messages=\"designationPaiementErrors\" rounded dense outlined label=\"Désignation\" v-model.trim=\"$v.modePaiementModel.designation.$model\"></v-text-field>\n                            </v-col>\n                            <v-col>\n                                <v-text-field :error-messages=\"telephoneGeneriqueErrors\" rounded dense outlined color=\"teal\" label=\"Numéro de téléphone\" v-model.trim=\"$v.modePaiementModel.telephoneGenerique.$model\"></v-text-field>\n                            </v-col>\n                            <v-col>\n                                <v-select :items=\"referenceTypePaiementList\" item-value=\"designation\" item-text=\"designation\" :error-messages=\"typePaiementErrors\" rounded dense outlined color=\"teal\" label=\"Type de paiement\" v-model.trim=\"$v.modePaiementModel.typeModePaiementDesignation.$model\"></v-select>\n                            </v-col>\n                        </v-row>\n                    </v-container>\n\n                    <v-card-actions>\n                        <v-btn small rounded outlined>REINITIALISER</v-btn>\n                        <v-btn small type=\"submit\" rounded outlined color=\"primary\">ACCEPTER LES MODIFICATIONS</v-btn>\n                    </v-card-actions>\n                </v-card>\n            </v-container>\n        </v-form>\n        <v-alert class=\"myalert alert-error\" type=\"error\" width=\"350px\" dismissible>{{ errorMsg }}</v-alert>\n        <v-alert class=\"myalert alert-success\" type=\"success\" width=\"350px\" dismissible>{{ successMsg }}</v-alert>\n        <v-overlay :value=\"overlay\"><v-progress-circular indeterminate size=\"64\"></v-progress-circular></v-overlay>\n    </v-app>\n</template>\n\n<script>\nimport { required } from 'vuelidate/lib/validators';\nimport axios from 'axios';\nimport { API_OBTENIR_REFERENCE_PAR_PAR_FAMILLE , API_MODIFIER_MODE_PAIEMENT, HEADERS } from '../globalConfig/globalConstConfig';\nimport $ from 'jquery'\nexport default {\n    name:'ModeModePaiement',\n    data(){\n        return{\n            errorMsg :null,\n            successMsg :null,\n            overlay:false,\n\n            referenceTypePaiementList:[],\n\n            referenceModePaiement:{\n                referenceFamilleDesignation: \"referenceFamilleModePaiement\"\n            },\n\n            objectToSendReferenceModePaiement:{\n                datas:[],\n            },\n\n            modePaiementModel:{\n                id:null,\n                designation: null,\n                telephoneGenerique: null,\n                typeModePaiementDesignation : null,\n                compagnieTransportRaisonSociale: \"KOUEVI CT\",\n            },\n\n            modePaiementToModify:{\n                datas:[]\n            },\n        }\n    }, \n\n    validations:{\n\n        modePaiementModel:{\n            designation:{\n                required\n            },\n            telephoneGenerique:{\n                required\n            },\n            typeModePaiementDesignation:{\n                required\n            }\n        }\n\n    },\n\n    methods:{\n\n        //SOUMISSION DU FORMULAIRE\n        submitForm(){\n            this.modifierModePaiement();\n        },\n\n        //OBTENIR REFERENCE DESIGNATION MODE DE PAIEMENT\n        async obtenirReferenceModePaiementList(){\n            this.objectToSendReferenceModePaiement.datas.push(this.referenceModePaiement)\n            await axios.post(API_OBTENIR_REFERENCE_PAR_PAR_FAMILLE, this.objectToSendReferenceModePaiement , { headers : HEADERS(this.$store.state.userAuthentified.token) }).then((response) => {\n                this.referenceTypePaiementList = response.data.items;\n            }).catch((e) => {\n                this.errorMsg = e ;\n                $(\".alert-error\").fadeIn();\n                setTimeout(function(){\n                    $(\".alert-error\").fadeOut(); \n                }, 4000)\n            })\n        },\n\n        // MODIFICATION D'UN MODE DE PAIEMENT\n        async modifierModePaiement(){\n            this.modePaiementToModify.datas.push(this.modePaiementModel);\n            this.overlay = true ;\n            await axios.post(API_MODIFIER_MODE_PAIEMENT, this.modePaiementToModify , { headers : HEADERS(this.$store.state.userAuthentified.token) }).then((response) => {\n                if (response.status == 200) {\n                    if (response.data.status.code == 800) {\n                        this.successMsg = response.data.status.message\n                        $(\".alert-success\").fadeIn();\n                        setTimeout(function(){\n                            $(\".alert-success\").fadeOut(); \n                        }, 4000)\n                        this.modePaiementToModify.datas = [] ;\n                    }else{\n                        this.errorMsg = response.data.status.message\n                        $(\".alert-error\").fadeIn();\n                        setTimeout(function(){\n                            $(\".alert-error\").fadeOut(); \n                        }, 3000)\n                        this.modePaiementToModify.datas = [] ;\n                    }  \n                    \n                }\n                else if (response.status == 204) {\n                    this.warningMsg = \"Erreur , lors de la création de l'offre de voyage\";\n                    $(\".alert-warning\").fadeIn();\n                    setTimeout(function(){\n                        $(\".alert-warning\").fadeOut(); \n                    }, 3000)\n                    this.modePaiementToModify.datas = [] ;\n                }\n                else{\n                    this.errorMsg = \"Erreur , opération de création impossible\";\n                    $(\".alert-error\").fadeIn();\n                    setTimeout(function(){\n                        $(\".alert-error\").fadeOut(); \n                    }, 3000)\n                    this.modePaiementToModify.datas = [] ;\n                }\n            }).catch((e) => {\n                this.errorMsg = e ;\n                $(\".alert-error\").fadeIn();\n                setTimeout(function(){\n                    $(\".alert-error\").fadeOut(); \n                }, 4000)\n                this.modePaiementToModify.datas = [] ;\n            }).finally(() => {\n                this.overlay = false;\n            })\n        },\n\n\n        //MODE EDITION MODE PAIEMENT\n        async editerModePaiement(){\n            if (localStorage.getItem(\"modePaiement\")) {\n                try {\n                    const modePaiementEditing = JSON.parse(localStorage.getItem(\"modePaiement\"));\n                    console.log(modePaiementEditing)\n                    this.modePaiementModel.id = modePaiementEditing.id;\n                    this.modePaiementModel.designation = modePaiementEditing.designation;\n                    this.modePaiementModel.telephoneGenerique = modePaiementEditing.telephoneGenerique;\n                    this.modePaiementModel.typeModePaiementDesignation = modePaiementEditing.typeModePaiementDesignation;\n                    localStorage.removeItem(\"modePaiement\");\n                } catch (error) {\n                    localStorage.removeItem(\"modePaiement\");\n                }\n            }else{\n                this.$router.replace({path:'/selectionnerModeAbonnementEtPaiement'})\n            }\n        },\n\n    }, \n\n    computed:{\n\n        // GESTION DES CONTRAINTES DE CHAMPS D'ENTREES POUR LA CREATION D'UN MODE DE PAIEMENT\n        designationPaiementErrors(){\n           const errors = [];\n            if (!this.$v.modePaiementModel.designation.$dirty) return errors\n            !this.$v.modePaiementModel.designation.required && errors.push('La désignation est obligatoire.')\n            return errors \n        },\n\n        telephoneGeneriqueErrors(){\n           const errors = [];\n            if (!this.$v.modePaiementModel.telephoneGenerique.$dirty) return errors\n            !this.$v.modePaiementModel.telephoneGenerique.required && errors.push('Entrer un numero de téléphone.')\n            return errors \n        },\n\n        typePaiementErrors(){\n           const errors = [];\n            if (!this.$v.modePaiementModel.typeModePaiementDesignation.$dirty) return errors\n            !this.$v.modePaiementModel.typeModePaiementDesignation.required && errors.push('La selection du type de paiement est obligatoire.')\n            return errors \n        },\n    },\n\n    mounted(){\n        this.obtenirReferenceModePaiementList();\n        this.editerModePaiement();\n    },\n}\n</script>\n\n<style scoped>\n    .myalert{\n        display: none;\n        z-index: 1900;\n    }\n\n    .alert-success{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n\n    .alert-error{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}