{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport $ from \"jquery\";\nimport { API_RECUPERER_LISTE_COMPAGNIE_TRANSPORT, API_VALIDER_DEMANDE_ADHESION_COMPAGNIE, HEADERS } from '../globalConfig/globalConstConfig';\nexport default {\n  name: 'SelectionnerCompagnieTransport',\n  data() {\n    return {\n      errorMsg: null,\n      compagnieToValidate: {\n        data: {\n          id: null\n        }\n      },\n      loading: true,\n      options: {\n        index: 0,\n        size: 8\n      },\n      search: '',\n      compagnieTransportList: [],\n      headers: [{\n        text: 'reference',\n        value: 'id'\n      }, {\n        text: 'Designation',\n        value: 'designation'\n      }, {\n        text: 'Ville',\n        value: 'villeDesignation'\n      }, {\n        text: 'Status',\n        value: 'statusUtilActualDesignation'\n      }, {\n        text: 'Actions',\n        value: 'actions',\n        sortable: false\n      }]\n    };\n  },\n  methods: {\n    // EDITER UNE COMPAGNIE DE TRANSPORT\n    editCompagnieTransport(compagnie) {\n      const parsedCompagnie = JSON.stringify(compagnie);\n      localStorage.setItem('compagnie', parsedCompagnie);\n      this.$router.push({\n        path: \"/ModifierCompagnieTransport\"\n      });\n    },\n    // RECUPERER LA LISTE DE TOUTES LES COMPAGNIES EN ATTENTES\n    readAllCompagniesTransportFromApi() {\n      this.loading = false;\n      axios.post(API_RECUPERER_LISTE_COMPAGNIE_TRANSPORT, this.options, {\n        headers: HEADERS(this.$store.state.userAuthentified.token)\n      }).then(response => {\n        if (response.status == 200) {\n          if (response.data.status.code != 800) {\n            this.errorMsg = response.data.status.message;\n            $(\".alert-error\").fadeIn();\n            setTimeout(function () {\n              $(\".alert-error\").fadeOut();\n            }, 4000);\n          } else {\n            this.compagnieTransportList = response.data.items;\n          }\n        } else {\n          this.errorMsg = \"Erreur\";\n        }\n      }).catch(e => {\n        this.errorMsg = e;\n      });\n    },\n    // SUPPRESSION D'UNE COMPAGNIE DE TRANSPORT\n    supprimerCompagnieTransport() {},\n    // VALIDER UNE COMPAGNIE DE TRANSPORT\n    async validerCompagnieTransport(compagnie) {\n      this.compagnieToValidate.data.id = compagnie.id;\n      axios.post(API_VALIDER_DEMANDE_ADHESION_COMPAGNIE, this.compagnieToValidate, {\n        headers: HEADERS(this.$store.state.userAuthentified.token)\n      }).then(response => {\n        if (response.status == 200) {\n          if (response.data.status.code != 800) {\n            this.$swal.fire('Validation', response.data.status.message, 'error');\n          } else {\n            this.$swal.fire('Validation', response.data.status.message, 'success');\n          }\n        } else {\n          this.$swal.fire('Validation', 'Error lors de la validation', 'error');\n        }\n      }).catch(e => {\n        this.$swal.fire('Validation', e, 'error');\n      });\n    }\n  },\n  mounted() {\n    this.readAllCompagniesTransportFromApi();\n  }\n};","map":{"version":3,"mappings":";AAgCA;AACA;AACA;AACA;EACAA;EACAC;IACA;MACAC;MAEAC;QACAF;UACAG;QACA;MACA;MAEAC;MACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC,UACA;QAAAC;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;QAAAC;MAAA;IAEA;EACA;EAEAC;IAEA;IACAC;MACA;MACAC;MACA;QAAAC;MAAA;IACA;IAGA;IACAC;MACA;MACAC;QAAAT;MAAA;QACA;UACA;YACA;YACAU;YACAC;cACAD;YACA;UACA;YACA;UACA;QACA;UACA;QACA;MACA;QACA;MACA;IACA;IAEA;IACAE;IAGA;IACA;MACA;MACAH;QAAAT;MAAA;QACA;UACA;YACA;UACA,OACA;YACA;UACA;QACA,OACA;UACA;QACA;MACA;QACA;MACA;IACA;EACA;EAEAa;IACA;EACA;AACA","names":["name","data","errorMsg","compagnieToValidate","id","loading","options","index","size","search","compagnieTransportList","headers","text","value","sortable","methods","editCompagnieTransport","localStorage","path","readAllCompagniesTransportFromApi","axios","$","setTimeout","supprimerCompagnieTransport","mounted"],"sourceRoot":"src/components/administrateur_societe","sources":["SelectionnerCompagnieTransport.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-card>\n            <v-card-title class=\"title-card\">LISTE DES COMPAGNIES\n                <v-spacer></v-spacer>\n                <v-text-field v-model=\"search\" append-icon=\"mdi-magnify\" label=\"Search\" single-line hide-details></v-text-field>               \n            </v-card-title>\n            \n            <v-data-table\n                :headers=\"headers\"\n                :items=\"compagnieTransportList\"\n                :loading=\"loading\"\n                :search=\"search\">\n\n                <template v-slot:[`item.statusUtilActualDesignation`]=\"{ item }\">\n                    <v-chip small v-if=\"item.statusUtilActualDesignation == 'compagnieTransportEncoursTraitement'\" color=\"teal\" text-color=\"white\" class=\"mr-2\"><span class=\"etat font-weight-bold\">En cours de traitement</span></v-chip>\n                    <v-chip v-else color=\"blue\" text-color=\"white\" class=\"mr-2\"><span class=\"etat\">Aucune d√©cision</span></v-chip>\n                </template>\n\n                <template v-slot:[`item.actions`]=\"{ item }\">\n                    <v-icon title=\"editer\" color=\"blue\" small class=\"mr-2\" @click=\"editCompagnieTransport(item)\">mdi-pencil</v-icon>\n                    <v-icon title=\"valider\" color=\"success\" small class=\"mr-2\" @click=\"validerCompagnieTransport(item)\">mdi-sync</v-icon>                       \n                    <v-icon title=\"supprimer\" color=\"red\" small class=\"mr-2\" @click=\"supprimerProduitLogement(item)\">mdi-delete</v-icon>\n                </template>\n\n            </v-data-table>\n            <v-alert class=\"myalert alert-error\" type=\"error\" width=\"350px\" dismissible>{{ errorMsg }}</v-alert>\n        </v-card>\n    </v-app>\n</template>\n\n<script>\nimport axios from \"axios\"\nimport $ from \"jquery\"\nimport { API_RECUPERER_LISTE_COMPAGNIE_TRANSPORT, API_VALIDER_DEMANDE_ADHESION_COMPAGNIE, HEADERS } from '../globalConfig/globalConstConfig'\nexport default {\n    name:'SelectionnerCompagnieTransport',\n    data(){\n        return{\n            errorMsg:null,\n\n            compagnieToValidate:{\n                data:{\n                    id:null\n                }\n            },\n\n            loading: true,\n            options: {\n                index : 0,\n                size : 8\n            },\n            search : '',\n            compagnieTransportList : [],\n            headers:[\n                {text : 'reference' , value : 'id'},\n                {text : 'Designation' , value : 'designation'},\n                {text : 'Ville' , value : 'villeDesignation'},\n                {text : 'Status' , value : 'statusUtilActualDesignation'},\n                {text : 'Actions' , value : 'actions' , sortable : false}\n            ]\n        }\n    },\n\n    methods :{\n\n        // EDITER UNE COMPAGNIE DE TRANSPORT\n        editCompagnieTransport(compagnie){\n            const parsedCompagnie = JSON.stringify(compagnie);\n            localStorage.setItem('compagnie', parsedCompagnie);\n            this.$router.push({path: \"/ModifierCompagnieTransport\" });\n        },\n\n\n        // RECUPERER LA LISTE DE TOUTES LES COMPAGNIES EN ATTENTES\n        readAllCompagniesTransportFromApi(){\n            this.loading = false;\n            axios.post(API_RECUPERER_LISTE_COMPAGNIE_TRANSPORT , this.options, { headers : HEADERS(this.$store.state.userAuthentified.token) } ).then((response) => {\n                if (response.status == 200) {\n                    if (response.data.status.code != 800) {\n                        this.errorMsg = response.data.status.message\n                        $(\".alert-error\").fadeIn();\n                        setTimeout(function(){\n                            $(\".alert-error\").fadeOut(); \n                        }, 4000)\n                    }else{\n                        this.compagnieTransportList = response.data.items\n                    }\n                }else{\n                    this.errorMsg = \"Erreur\";\n                }\n            }).catch((e) => {\n                this.errorMsg = e\n            })\n        },\n        \n        // SUPPRESSION D'UNE COMPAGNIE DE TRANSPORT\n        supprimerCompagnieTransport(){},\n\n\n        // VALIDER UNE COMPAGNIE DE TRANSPORT\n        async validerCompagnieTransport(compagnie){\n            this.compagnieToValidate.data.id = compagnie.id\n            axios.post(API_VALIDER_DEMANDE_ADHESION_COMPAGNIE ,this.compagnieToValidate , { headers : HEADERS(this.$store.state.userAuthentified.token) }).then((response) => {\n                if (response.status == 200) {\n                    if (response.data.status.code != 800) {\n                        this.$swal.fire('Validation',response.data.status.message,'error')\n                    }\n                    else{\n                        this.$swal.fire('Validation',response.data.status.message,'success')\n                    }\n                }\n                else{\n                    this.$swal.fire('Validation','Error lors de la validation','error')\n                }\n            }).catch((e) => {\n                this.$swal.fire('Validation' , e , 'error')\n            })\n        },\n    },\n\n    mounted(){\n        this.readAllCompagniesTransportFromApi()\n    }\n}\n</script>\n\n<style scoped>\n    .title-card{\n        font-weight: bold;\n        color: black;\n        font-size: 17px;\n    }\n\n    .myalert{\n        display: none;\n        z-index: 1900;\n    }\n\n    .alert-error{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}