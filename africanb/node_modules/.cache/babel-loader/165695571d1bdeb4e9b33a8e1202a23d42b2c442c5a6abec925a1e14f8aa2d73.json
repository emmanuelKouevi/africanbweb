{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from 'axios';\n//import $ from 'jquery';\nimport { API_GET_RESERVATIONS_BY_SELLER, API_GET_RESERVATIONS_BY_ADMIN_TP, API_GENERATE_TICKET, HEADERS } from '../globalConfig/globalConstConfig';\nexport default {\n  name: \"SelectionnerReservationBillet\",\n  data() {\n    return {\n      errorMsg: null,\n      successMsg: null,\n      warningMsg: null,\n      ticketGenerated: {\n        \"data\": {\n          designation: \"GAR4561657947\"\n        }\n      },\n      objectToSend: {\n        \"data\": {}\n      },\n      headers: [{\n        text: 'Réference N°',\n        value: 'id'\n      }, {\n        text: 'Gare',\n        value: 'gareDesignation'\n      }, {\n        text: 'Trajet',\n        value: 'offreVoyageDesignation'\n      }, {\n        text: 'Nom du client',\n        value: 'clientDetails.nom'\n      }, {\n        text: 'Prenom du client',\n        value: 'clientDetails.prenoms'\n      }, {\n        text: 'Montant versé',\n        value: 'montantTotalReservation'\n      }, {\n        text: 'Actions',\n        value: 'actions',\n        sortable: false\n      }],\n      overlay: false,\n      loading: false,\n      search: '',\n      reservationTicketList: []\n    };\n  },\n  methods: {\n    async downloadPdf() {\n      try {\n        const response = await axios.post(API_GENERATE_TICKET, this.ticketGenerated, {\n          headers: HEADERS(this.$store.state.userAuthentified.token)\n        }, {\n          responseType: 'arraybuffer' // Utiliser 'arraybuffer' pour recevoir la réponse en tant que tableau d'octets\n        });\n\n        // Convertir l'ArrayBuffer en un Blob avec le type MIME application/pdf\n        const blob = new Blob([response.data], {\n          type: 'application/pdf'\n        });\n\n        // Créer une URL temporaire à partir du Blob\n        const url = window.URL.createObjectURL(blob);\n\n        // Créer un lien pour télécharger le fichier\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', 'fichier.pdf'); // Nom du fichier à télécharger\n        document.body.appendChild(link);\n        link.click();\n\n        // Nettoyer l'URL pour éviter les fuites de mémoire\n        window.URL.revokeObjectURL(url);\n      } catch (error) {\n        console.error('Erreur lors du téléchargement du PDF :', error);\n      }\n    },\n    async convertToBase64(byte) {\n      console.log(byte);\n      //const pdfDataRaw = byte; // Remplacez ceci par votre donnée brute complète\n      // Conversion en tableau d'octets (UTF-8)\n      //const utf8Encoder = new TextEncoder();\n      //const bytes = utf8Encoder.encode(pdfDataRaw);\n      // Conversion en chaîne Base64\n      //const base64String = btoa(String.fromCharCode(...bytes));\n      //console.log(base64String);\n      window.open(\"data:application/pdf;base64,\" + byte, '_blank', 'fullscreen=yes');\n    },\n    //Generer le billet de voyage\n    async imprimerBillet() {\n      await axios.post(API_GENERATE_TICKET, this.ticketGenerated, {\n        headers: HEADERS(this.$store.state.userAuthentified.token)\n      }).then(response => {\n        this.convertToBase64(response.data.item.contentBase64);\n      }).catch(e => {\n        this.errorMsg = e;\n      });\n    },\n    //OBTENIR LA LISTE DES RESERVATIONS EFFECTUÉ PAR LES UTILISATEUR À LA GARE\n    async getAllReservationTicketAvailable() {\n      this.loading = true;\n      console.log(\"Dans le service de recuperation des reservation\");\n      if (this.$store.state.userAuthentified.roleCode == \"RoleAdminCompagnieTransport\") {\n        await axios.post(API_GET_RESERVATIONS_BY_ADMIN_TP, this.objectToSend, {\n          headers: HEADERS(this.$store.state.userAuthentified.token)\n        }).then(response => {\n          if (response.status == 200) {\n            console.log(response);\n            if (response.data.hasError == false) {\n              this.reservationTicketList = response.data.items;\n            } else {\n              //\n            }\n          } else {\n            alert(\"\");\n          }\n        }).catch(e => {\n          this.errorMsg = e;\n        }).finally(() => {\n          this.loading = false;\n        });\n      } else {\n        await axios.post(API_GET_RESERVATIONS_BY_SELLER, this.objectToSend, {\n          headers: HEADERS(this.$store.state.userAuthentified.token)\n        }).then(response => {\n          if (response.status == 200) {\n            console.log(response);\n            if (response.data.hasError == false) {\n              this.reservationTicketList = response.data.items;\n            } else {\n              //\n            }\n          } else {\n            alert(\"\");\n          }\n        }).catch(e => {\n          this.errorMsg = e;\n        }).finally(() => {\n          this.loading = false;\n        });\n      }\n    },\n    //CONSULTER UNE RESERVATION\n    checkBooking(reservation) {\n      const parsedBooking = JSON.stringify(reservation);\n      localStorage.setItem('reservationBillet', parsedBooking);\n      this.$router.push({\n        path: \"/detail_reservation\"\n      });\n    }\n  },\n  computed: {\n    totalPriceReservation() {\n      var total = 0;\n      for (let index = 0; index < this.reservationTicketList.length; index++) {\n        console.log(this.reservationTicketList[index].montantTotalReservation);\n        total += this.reservationTicketList[index].montantTotalReservation;\n      }\n      return total;\n    }\n  },\n  mounted() {\n    this.getAllReservationTicketAvailable();\n  }\n};","map":{"version":3,"names":["axios","API_GET_RESERVATIONS_BY_SELLER","API_GET_RESERVATIONS_BY_ADMIN_TP","API_GENERATE_TICKET","HEADERS","name","data","errorMsg","successMsg","warningMsg","ticketGenerated","designation","objectToSend","headers","text","value","sortable","overlay","loading","search","reservationTicketList","methods","downloadPdf","response","post","$store","state","userAuthentified","token","responseType","blob","Blob","type","url","window","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","revokeObjectURL","error","console","convertToBase64","byte","log","open","imprimerBillet","then","item","contentBase64","catch","e","getAllReservationTicketAvailable","roleCode","status","hasError","items","alert","finally","checkBooking","reservation","parsedBooking","JSON","stringify","localStorage","setItem","$router","push","path","computed","totalPriceReservation","total","index","length","montantTotalReservation","mounted"],"sources":["src/components/vendeur/SelectionnerReservationBillet.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-container fluid>\n\n            <div class=\"row\">\n                <div class=\"col-lg-6\">\n                    <v-card rounded=\"lg\" color=\"#95afc0\" class=\"count-books\">\n                        <v-card-title><span class=\"card-title-text\">TOTAL DES VENTES</span></v-card-title>\n                        <v-card-text>\n                            <v-container>\n                                <v-row justify=\"center\">\n                                    <span class=\"libelle font-weight-bold\">{{ totalPriceReservation }}</span>&nbsp;<small class=\"font-weight-bold cfa\">FCFA</small>\n                                </v-row>\n                            </v-container>\n                        </v-card-text>\n                    </v-card>\n                </div>\n\n                <div class=\"col-lg-6\">\n                    <v-card rounded=\"lg\" color=\"#f9ca24\">\n                        <v-card-title><span class=\"card-title-text\">Offres en cours</span></v-card-title>\n                        <v-card-text>\n                            <v-container>\n                                <v-row justify=\"center\">\n                                    <span class=\"libelle font-weight-bold\">4</span>\n                                </v-row>\n                            </v-container>\n                        </v-card-text>\n                    </v-card>\n                </div>\n            </div> <br>\n\n            <v-card>\n                <v-card-title><small class=\"title_card\">TOUS LES BILLETS RÉSERVÉS</small>\n                <v-spacer></v-spacer>\n                <v-text-field v-model=\"search\" dense placeholder=\"Rechercher ...\"></v-text-field>\n                </v-card-title>\n                <v-divider></v-divider>\n                <v-card-text>\n                    <v-data-table :headers=\"headers\" :search=\"search\" :loading=\"loading\" :items=\"reservationTicketList\">\n                        <template v-slot:[`item.actions`]=\"{ item }\">\n                            <v-icon title=\"editer\" color=\"blue\" small class=\"mr-2\" @click=\"checkBooking(item)\">mdi-pencil</v-icon>&nbsp;\n                            <v-icon title=\"imprimer\" color=\"blue\" small class=\"mr-2\" @click=\"imprimerBillet()\">mdi-printer</v-icon>\n                        </template>\n                    </v-data-table>\n                </v-card-text>\n            </v-card>\n        </v-container>\n\n        <v-alert class=\"myalert alert-success\" type=\"success\" width=\"350px\" dismissible>{{ successMsg }}</v-alert> \n        <v-alert class=\"myalert alert-error\" type=\"error\" width=\"350px\" dismissible>{{ errorMsg }}</v-alert>\n        <v-overlay :value=\"overlay\"><v-progress-circular indeterminate size=\"64\"></v-progress-circular></v-overlay>\n    </v-app>\n</template>\n\n<script>\n\nimport axios from 'axios';\n//import $ from 'jquery';\nimport { API_GET_RESERVATIONS_BY_SELLER , API_GET_RESERVATIONS_BY_ADMIN_TP , API_GENERATE_TICKET,  HEADERS } from '../globalConfig/globalConstConfig';\nexport default {\n    name:\"SelectionnerReservationBillet\",\n    data(){\n        return{\n            errorMsg: null,\n            successMsg: null,\n            warningMsg: null,\n\n            ticketGenerated:{\n                \"data\": {\n                    designation:\"GAR4561657947\",\n                }\n            },\n\n            objectToSend:{\n                \"data\": {\n                    \n                }\n            },\n\n            headers:[\n                {text : 'Réference N°' ,value :'id'},\n                {text : 'Gare' ,value :'gareDesignation'},\n                {text : 'Trajet' ,value :'offreVoyageDesignation'},\n                {text : 'Nom du client' ,value :'clientDetails.nom'},\n                {text : 'Prenom du client' ,value :'clientDetails.prenoms'},\n                {text : 'Montant versé' ,value :'montantTotalReservation'},\n                {text : 'Actions' , value : 'actions' , sortable : false}\n            ],\n\n            overlay : false,\n            loading:false,\n            search: '',\n\n\n            reservationTicketList:[],\n        }\n    },\n\n    methods:{\n\n        async downloadPdf() {\n            try {\n                const response = await axios.post(API_GENERATE_TICKET, this.ticketGenerated, { headers : HEADERS(this.$store.state.userAuthentified.token) }, {\n                    responseType: 'arraybuffer', // Utiliser 'arraybuffer' pour recevoir la réponse en tant que tableau d'octets\n                });\n\n                // Convertir l'ArrayBuffer en un Blob avec le type MIME application/pdf\n                const blob = new Blob([response.data], { type: 'application/pdf' });\n\n                // Créer une URL temporaire à partir du Blob\n                const url = window.URL.createObjectURL(blob);\n\n                // Créer un lien pour télécharger le fichier\n                const link = document.createElement('a');\n                link.href = url;\n                link.setAttribute('download', 'fichier.pdf'); // Nom du fichier à télécharger\n                document.body.appendChild(link);\n                link.click();\n\n                // Nettoyer l'URL pour éviter les fuites de mémoire\n                window.URL.revokeObjectURL(url);\n            } catch (error) {\n                console.error('Erreur lors du téléchargement du PDF :', error);\n            }\n        },\n\n\n        async convertToBase64(byte){\n            console.log(byte)\n            //const pdfDataRaw = byte; // Remplacez ceci par votre donnée brute complète\n            // Conversion en tableau d'octets (UTF-8)\n            //const utf8Encoder = new TextEncoder();\n            //const bytes = utf8Encoder.encode(pdfDataRaw);\n            // Conversion en chaîne Base64\n            //const base64String = btoa(String.fromCharCode(...bytes));\n            //console.log(base64String);\n            window.open(\"data:application/pdf;base64,\"+byte, '_blank', 'fullscreen=yes')\n        },\n\n\n        //Generer le billet de voyage\n        async imprimerBillet(){\n            await axios.post(API_GENERATE_TICKET, this.ticketGenerated, { headers : HEADERS(this.$store.state.userAuthentified.token) }).then((response) => {       \n                this.convertToBase64(response.data.item.contentBase64)         \n            }).catch((e) => {\n                this.errorMsg = e\n            })\n        },\n\n        //OBTENIR LA LISTE DES RESERVATIONS EFFECTUÉ PAR LES UTILISATEUR À LA GARE\n        async getAllReservationTicketAvailable(){\n            this.loading = true ;\n            console.log(\"Dans le service de recuperation des reservation\")\n            if(this.$store.state.userAuthentified.roleCode == \"RoleAdminCompagnieTransport\"){\n                await axios.post(API_GET_RESERVATIONS_BY_ADMIN_TP, this.objectToSend, { headers : HEADERS(this.$store.state.userAuthentified.token) }).then((response) => {\n                    if (response.status == 200) {\n                        console.log(response)\n                        if (response.data.hasError == false) {\n                            this.reservationTicketList = response.data.items;\n                        }else{\n                            //\n                        }\n                    }else{\n                        alert(\"\");\n                    }\n                }).catch((e) => {\n                    this.errorMsg = e\n                }).finally(() => {\n                    this.loading = false;   \n                })\n            }else{\n                await axios.post(API_GET_RESERVATIONS_BY_SELLER, this.objectToSend, { headers : HEADERS(this.$store.state.userAuthentified.token) }).then((response) => {\n                    if (response.status == 200) {\n                        console.log(response)\n                        if (response.data.hasError == false) {\n                            this.reservationTicketList = response.data.items;\n                        }else{\n                            //\n                        }\n                    }else{\n                        alert(\"\");\n                    }\n                }).catch((e) => {\n                    this.errorMsg = e\n                }).finally(() => {\n                    this.loading = false;   \n                })\n            }\n        },\n\n        //CONSULTER UNE RESERVATION\n        checkBooking(reservation){\n            const parsedBooking= JSON.stringify(reservation);\n            localStorage.setItem('reservationBillet', parsedBooking);\n            this.$router.push({path: \"/detail_reservation\" });\n        },\n\n    },\n\n    computed:{\n        \n        totalPriceReservation(){\n            var total = 0;\n            for (let index = 0; index < this.reservationTicketList.length; index++) {\n                console.log(this.reservationTicketList[index].montantTotalReservation)\n                total += this.reservationTicketList[index].montantTotalReservation;\n            }\n            return total;\n        }\n\n    },\n\n    mounted(){\n        this.getAllReservationTicketAvailable()\n    }\n}\n</script>\n\n<style scoped>\n    .title_card{\n        font-weight: bold;\n        font-size: 12px;\n    }\n\n    .myalert{\n        display: none;\n        z-index: 1900;\n    }\n\n    .libelle{\n        color: white;\n        font-size:20px\n    }\n\n    .cfa{\n        color: white;\n    }\n\n    .card-title-text{\n        font-size: 13px;\n        color: white;\n        text-transform: uppercase;\n        font-weight: bold\n    }\n\n    .alert-success{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n\n    .alert-error{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n</style>"],"mappings":";;;;AAyDA,OAAAA,KAAA;AACA;AACA,SAAAC,8BAAA,EAAAC,gCAAA,EAAAC,mBAAA,EAAAC,OAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,UAAA;MACAC,UAAA;MAEAC,eAAA;QACA;UACAC,WAAA;QACA;MACA;MAEAC,YAAA;QACA,SAEA;MACA;MAEAC,OAAA,GACA;QAAAC,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;QAAAC,QAAA;MAAA,EACA;MAEAC,OAAA;MACAC,OAAA;MACAC,MAAA;MAGAC,qBAAA;IACA;EACA;EAEAC,OAAA;IAEA,MAAAC,YAAA;MACA;QACA,MAAAC,QAAA,SAAAvB,KAAA,CAAAwB,IAAA,CAAArB,mBAAA,OAAAO,eAAA;UAAAG,OAAA,EAAAT,OAAA,MAAAqB,MAAA,CAAAC,KAAA,CAAAC,gBAAA,CAAAC,KAAA;QAAA;UACAC,YAAA;QACA;;QAEA;QACA,MAAAC,IAAA,OAAAC,IAAA,EAAAR,QAAA,CAAAjB,IAAA;UAAA0B,IAAA;QAAA;;QAEA;QACA,MAAAC,GAAA,GAAAC,MAAA,CAAAC,GAAA,CAAAC,eAAA,CAAAN,IAAA;;QAEA;QACA,MAAAO,IAAA,GAAAC,QAAA,CAAAC,aAAA;QACAF,IAAA,CAAAG,IAAA,GAAAP,GAAA;QACAI,IAAA,CAAAI,YAAA;QACAH,QAAA,CAAAI,IAAA,CAAAC,WAAA,CAAAN,IAAA;QACAA,IAAA,CAAAO,KAAA;;QAEA;QACAV,MAAA,CAAAC,GAAA,CAAAU,eAAA,CAAAZ,GAAA;MACA,SAAAa,KAAA;QACAC,OAAA,CAAAD,KAAA,2CAAAA,KAAA;MACA;IACA;IAGA,MAAAE,gBAAAC,IAAA;MACAF,OAAA,CAAAG,GAAA,CAAAD,IAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAf,MAAA,CAAAiB,IAAA,kCAAAF,IAAA;IACA;IAGA;IACA,MAAAG,eAAA;MACA,MAAApD,KAAA,CAAAwB,IAAA,CAAArB,mBAAA,OAAAO,eAAA;QAAAG,OAAA,EAAAT,OAAA,MAAAqB,MAAA,CAAAC,KAAA,CAAAC,gBAAA,CAAAC,KAAA;MAAA,GAAAyB,IAAA,CAAA9B,QAAA;QACA,KAAAyB,eAAA,CAAAzB,QAAA,CAAAjB,IAAA,CAAAgD,IAAA,CAAAC,aAAA;MACA,GAAAC,KAAA,CAAAC,CAAA;QACA,KAAAlD,QAAA,GAAAkD,CAAA;MACA;IACA;IAEA;IACA,MAAAC,iCAAA;MACA,KAAAxC,OAAA;MACA6B,OAAA,CAAAG,GAAA;MACA,SAAAzB,MAAA,CAAAC,KAAA,CAAAC,gBAAA,CAAAgC,QAAA;QACA,MAAA3D,KAAA,CAAAwB,IAAA,CAAAtB,gCAAA,OAAAU,YAAA;UAAAC,OAAA,EAAAT,OAAA,MAAAqB,MAAA,CAAAC,KAAA,CAAAC,gBAAA,CAAAC,KAAA;QAAA,GAAAyB,IAAA,CAAA9B,QAAA;UACA,IAAAA,QAAA,CAAAqC,MAAA;YACAb,OAAA,CAAAG,GAAA,CAAA3B,QAAA;YACA,IAAAA,QAAA,CAAAjB,IAAA,CAAAuD,QAAA;cACA,KAAAzC,qBAAA,GAAAG,QAAA,CAAAjB,IAAA,CAAAwD,KAAA;YACA;cACA;YAAA;UAEA;YACAC,KAAA;UACA;QACA,GAAAP,KAAA,CAAAC,CAAA;UACA,KAAAlD,QAAA,GAAAkD,CAAA;QACA,GAAAO,OAAA;UACA,KAAA9C,OAAA;QACA;MACA;QACA,MAAAlB,KAAA,CAAAwB,IAAA,CAAAvB,8BAAA,OAAAW,YAAA;UAAAC,OAAA,EAAAT,OAAA,MAAAqB,MAAA,CAAAC,KAAA,CAAAC,gBAAA,CAAAC,KAAA;QAAA,GAAAyB,IAAA,CAAA9B,QAAA;UACA,IAAAA,QAAA,CAAAqC,MAAA;YACAb,OAAA,CAAAG,GAAA,CAAA3B,QAAA;YACA,IAAAA,QAAA,CAAAjB,IAAA,CAAAuD,QAAA;cACA,KAAAzC,qBAAA,GAAAG,QAAA,CAAAjB,IAAA,CAAAwD,KAAA;YACA;cACA;YAAA;UAEA;YACAC,KAAA;UACA;QACA,GAAAP,KAAA,CAAAC,CAAA;UACA,KAAAlD,QAAA,GAAAkD,CAAA;QACA,GAAAO,OAAA;UACA,KAAA9C,OAAA;QACA;MACA;IACA;IAEA;IACA+C,aAAAC,WAAA;MACA,MAAAC,aAAA,GAAAC,IAAA,CAAAC,SAAA,CAAAH,WAAA;MACAI,YAAA,CAAAC,OAAA,sBAAAJ,aAAA;MACA,KAAAK,OAAA,CAAAC,IAAA;QAAAC,IAAA;MAAA;IACA;EAEA;EAEAC,QAAA;IAEAC,sBAAA;MACA,IAAAC,KAAA;MACA,SAAAC,KAAA,MAAAA,KAAA,QAAA1D,qBAAA,CAAA2D,MAAA,EAAAD,KAAA;QACA/B,OAAA,CAAAG,GAAA,MAAA9B,qBAAA,CAAA0D,KAAA,EAAAE,uBAAA;QACAH,KAAA,SAAAzD,qBAAA,CAAA0D,KAAA,EAAAE,uBAAA;MACA;MACA,OAAAH,KAAA;IACA;EAEA;EAEAI,QAAA;IACA,KAAAvB,gCAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}