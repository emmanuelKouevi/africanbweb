{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport $ from 'jquery';\nimport { required, email, minLength } from 'vuelidate/lib/validators';\nimport { API_GET_ALL_ROLES, API_CREATE_USER, HEADERS } from '../globalConfig/globalConstConfig';\nexport default {\n  name: 'creerUtilisateur',\n  data() {\n    return {\n      errorMsg: null,\n      successMsg: null,\n      overlay: null,\n      userRoleList: [],\n      userDataToSend: {\n        datas: []\n      },\n      userObject: {\n        nom: null,\n        prenoms: null,\n        login: null,\n        email: null,\n        roleCode: null\n      }\n    };\n  },\n  validations: {\n    userObject: {\n      nom: {\n        required,\n        minLength: minLength(2)\n      },\n      prenoms: {\n        required,\n        minLength: minLength(2)\n      },\n      login: {\n        required,\n        minLength: minLength(2)\n      },\n      email: {\n        required,\n        email\n      },\n      roleCode: {\n        required\n      }\n    }\n  },\n  methods: {\n    //SOUMISSION DU FORMULAIRE\n    submitForm() {\n      this.$v.$touch();\n      if (this.$v.userObject.$invalid) {\n        this.errorMsg = \"Certaines informations requises n'ont pas été renseigné\";\n        $(\".alert-error\").fadeIn();\n        setTimeout(function () {\n          $(\".alert-error\").fadeOut();\n        }, 2000);\n      } else {\n        this.createUser();\n      }\n    },\n    // CREER UN UTILISATEUR\n\n    async createUser() {\n      this.overlay = true;\n      this.userDataToSend.datas.push(this.userObject);\n      await axios.post(API_CREATE_USER, this.userDataToSend, {\n        headers: HEADERS(this.$store.state.userAuthentified.token)\n      }).then(response => {\n        if (response.status == 200) {\n          if (response.data.status.code == 800) {\n            this.successMsg = response.data.status.message;\n            $(\".alert-success\").fadeIn();\n            setTimeout(function () {\n              $(\".alert-success\").fadeOut();\n            }, 4000);\n            this.userDataToSend.datas = [];\n          } else {\n            this.errorMsg = response.data.status.message;\n            $(\".alert-error\").fadeIn();\n            setTimeout(function () {\n              $(\".alert-error\").fadeOut();\n            }, 3000);\n            this.userDataToSend.datas = [];\n          }\n        } else if (response.status == 204) {\n          this.warningMsg = \"Erreur , lors de la création\";\n          $(\".alert-warning\").fadeIn();\n          setTimeout(function () {\n            $(\".alert-warning\").fadeOut();\n          }, 3000);\n          this.userDataToSend.datas = [];\n        } else {\n          this.errorMsg = \"Erreur , opération de création impossible\";\n          $(\".alert-error\").fadeIn();\n          setTimeout(function () {\n            $(\".alert-error\").fadeOut();\n          }, 3000);\n          this.userDataToSend.datas = [];\n        }\n      }).catch(e => {\n        this.errorMsg = e;\n        $(\".alert-error\").fadeIn();\n        setTimeout(function () {\n          $(\".alert-error\").fadeOut();\n        }, 3000);\n        this.userDataToSend.datas = [];\n      }).finally(() => {\n        this.overlay = false;\n      });\n    },\n    // RECUPERER LA LISTE DES ROLES DÉFINIS\n    async getAllUsersRoles() {\n      await axios.post(API_GET_ALL_ROLES, {}, {\n        headers: HEADERS(this.$store.state.userAuthentified.token)\n      }).then(response => {\n        if (response.status == 200) {\n          if (response.data.status.code != 800) {\n            this.errorMsg = response.data.status.message;\n            $(\".alert-error\").fadeIn();\n            setTimeout(function () {\n              $(\".alert-error\").fadeOut();\n            }, 4000);\n          } else {\n            this.userRoleList = response.data.items;\n          }\n        } else {\n          this.errorMsg = \"Erreur\";\n          $(\".alert-error\").fadeIn();\n          setTimeout(function () {\n            $(\".alert-error\").fadeOut();\n          }, 4000);\n        }\n      }).catch(e => {\n        this.errorMsg = e;\n      });\n    }\n  },\n  computed: {\n    //CONTRAINTES SUR LES CHAMPS DE SAISIES\n\n    usernameError() {\n      const errors = [];\n      if (!this.$v.userObject.nom.$dirty) return errors;\n      !this.$v.userObject.nom.required && errors.push('Le nom de l\\'utilsateur est obligatoire.');\n      !this.$v.userObject.nom.minLength && errors.push('Au moins 2 caractères.');\n      return errors;\n    },\n    surnameError() {\n      const errors = [];\n      if (!this.$v.userObject.prenoms.$dirty) return errors;\n      !this.$v.userObject.prenoms.required && errors.push('Le prenom de l\\'utilsateur est obligatoire.');\n      !this.$v.userObject.prenoms.minLength && errors.push('Au moins 2 caractères.');\n      return errors;\n    },\n    loginError() {\n      const errors = [];\n      if (!this.$v.userObject.login.$dirty) return errors;\n      !this.$v.userObject.login.required && errors.push('Le login de l\\'utilsateur est obligatoire.');\n      !this.$v.userObject.login.minLength && errors.push('Au moins 2 caractères.');\n      return errors;\n    },\n    emailError() {\n      const errors = [];\n      if (!this.$v.userObject.email.$dirty) return errors;\n      !this.$v.userObject.email.required && errors.push('L\\'email de l\\'utilsateur est obligatoire.');\n      !this.$v.userObject.email.email && errors.push('Format adresse e-mail incorrect.');\n      return errors;\n    },\n    roleCodeError() {\n      const errors = [];\n      if (!this.$v.userObject.roleCode.$dirty) return errors;\n      !this.$v.userObject.roleCode.required && errors.push('Veuillez selectionner un rôle.');\n      return errors;\n    }\n  },\n  mounted() {\n    this.getAllUsersRoles();\n  }\n};","map":{"version":3,"mappings":";AAsCA;AACA;AACA;AACA;AACA;EACAA;EACAC;IACA;MAEAC;MACAC;MACAC;MAEAC;MAGAC;QACAC;MACA;MAEAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;IACA;EACA;EAEAC;IAEAN;MACAC;QACAM;QACAC;MACA;MAEAN;QACAK;QACAC;MACA;MAEAL;QACAI;QACAC;MACA;MAEAJ;QACAG;QACAH;MACA;MAEAC;QACAE;MACA;IACA;EAEA;EAEAE;IAEA;IACAC;MACA;MACA;QACA;QACAC;QACAC;UACAD;QACA;MACA,OACA;QACA;MACA;IACA;IAEA;;IAEA;MACA;MACA;MACA;QAAAE;MAAA;QACA;UACA;YACA;YACAF;YACAC;cACAD;YACA;YACA;UACA;YACA;YACAA;YACAC;cACAD;YACA;YACA;UACA;QAEA,OACA;UACA;UACAA;UACAC;YACAD;UACA;UACA;QACA,OACA;UACA;UACAA;UACAC;YACAD;UACA;UACA;QACA;MACA;QACA;QACAA;QACAC;UACAD;QACA;QACA;MACA;QACA;MACA;IACA;IAEA;IACA;MACA;QAAAE;MAAA;QACA;UACA;YACA;YACAF;YACAC;cACAD;YACA;UACA;YACA;UACA;QACA;UACA;UACAA;UACAC;YACAD;UACA;QACA;MACA;QACA;MACA;IACA;EAEA;EAGAG;IAEA;;IAEAC;MACA;MACA;MACA;MACA;MACA;IACA;IAGAC;MACA;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;MACA;IACA;IAGAC;MACA;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;IACA;EAEA;EAEAC;IACA;EACA;AAEA","names":["name","data","errorMsg","successMsg","overlay","userRoleList","userDataToSend","datas","userObject","nom","prenoms","login","email","roleCode","validations","required","minLength","methods","submitForm","$","setTimeout","headers","computed","usernameError","surnameError","loginError","emailError","roleCodeError","mounted"],"sourceRoot":"src/components/administrateur_societe","sources":["creerUtilisateur.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-form @submit.prevent=\"submitForm\">\n            <v-card class=\"mx-auto\" max-width=\"1000\">\n                <v-card-title><h6>CREER UN COMPTE (GESTION DE LA PLATEFORME)</h6></v-card-title>\n                <v-card-subtitle class=\"litle_title\">Création d'utilisateurs pour la meilleur gestion de votre plateforme</v-card-subtitle>\n\n                <v-card-text>\n                    <v-container>\n                        <v-row>\n                            <v-col><v-text-field class=\"myInput\" :error-messages=\"usernameError\" v-model.trim=\"$v.userObject.nom.$model\" label=\"Nom\" outlined dense></v-text-field></v-col>\n                            <v-col><v-text-field class=\"myInput\" :error-messages=\"surnameError\" v-model.trim=\"$v.userObject.prenoms.$model\" label=\"Prénom\" outlined dense></v-text-field></v-col>\n                        </v-row>\n\n                        <v-row>\n                            <v-col><v-text-field class=\"myInput\" :error-messages=\"loginError\" v-model.trim=\"$v.userObject.login.$model\" label=\"Login ou Pseudo\" outlined dense></v-text-field></v-col>\n                            <v-col><v-text-field class=\"myInput\" :error-messages=\"emailError\" v-model.trim=\"$v.userObject.email.$model\" label=\"E-mail\" outlined dense></v-text-field></v-col>\n                        </v-row>\n\n                        <v-row>\n                            <v-col cols=\"6\"><v-select class=\"myInput\" :items=\"userRoleList\" item-text=\"code\" item-value=\"code\" :error-messages=\"roleCodeError\" v-model.trim=\"$v.userObject.roleCode.$model\" label=\"Rôle utilisateur\" outlined dense></v-select></v-col>\n                        </v-row>\n                    </v-container>\n                </v-card-text>\n\n                <v-card-actions>\n                    <v-btn type=\"button\" small outlined color=\"secondary\"><span>REINITIALISER</span></v-btn>\n                    <v-btn type=\"submit\" text small outlined color=\"primary\"><span>CREER UTILISATEUR</span></v-btn>\n                </v-card-actions>\n            </v-card>\n        </v-form>\n        <v-alert class=\"myalert alert-error\" type=\"error\" width=\"350px\" dismissible>{{ errorMsg }}</v-alert>\n        <v-alert class=\"myalert alert-success\" type=\"success\" width=\"350px\" dismissible>{{ successMsg }}</v-alert>\n        <v-overlay :value=\"overlay\"><v-progress-circular indeterminate size=\"64\"></v-progress-circular></v-overlay>\n    </v-app>\n</template>\n\n<script>\nimport axios from 'axios';\nimport $ from 'jquery';\nimport { required , email , minLength } from 'vuelidate/lib/validators' \nimport { API_GET_ALL_ROLES , API_CREATE_USER, HEADERS  } from '../globalConfig/globalConstConfig'\nexport default {\n    name:'creerUtilisateur',\n    data(){\n        return{\n\n            errorMsg : null,\n            successMsg: null,\n            overlay:null,\n\n            userRoleList:[],\n\n\n            userDataToSend:{\n                datas:[]\n            },\n\n            userObject:{\n                nom: null,\n                prenoms:null,\n                login:null,\n                email:null,\n                roleCode:null,\n            },\n        }\n    },\n\n    validations:{\n\n        userObject:{\n            nom:{\n                required,\n                minLength : minLength(2)\n            },\n\n            prenoms:{\n                required,\n                minLength : minLength(2)\n            },\n\n            login:{\n                required,\n                minLength : minLength(2)\n            },\n\n            email:{\n                required,\n                email\n            },\n\n            roleCode:{\n                required\n            }\n        }\n    \n    },\n\n    methods:{\n\n        //SOUMISSION DU FORMULAIRE\n        submitForm(){\n            this.$v.$touch();\n            if (this.$v.userObject.$invalid) {\n              this.errorMsg = \"Certaines informations requises n'ont pas été renseigné\" ;\n              $(\".alert-error\").fadeIn();\n              setTimeout(function(){\n                $(\".alert-error\").fadeOut(); \n              }, 2000);\n            } \n            else {\n                this.createUser();\n            }\n        },\n\n        // CREER UN UTILISATEUR\n\n        async createUser(){\n            this.overlay = true ;\n            this.userDataToSend.datas.push(this.userObject)\n            await axios.post(API_CREATE_USER, this.userDataToSend, { headers : HEADERS(this.$store.state.userAuthentified.token) }).then((response) => {\n                if (response.status == 200) {\n                    if (response.data.status.code == 800) {\n                        this.successMsg = response.data.status.message\n                        $(\".alert-success\").fadeIn();\n                        setTimeout(function(){\n                            $(\".alert-success\").fadeOut(); \n                        }, 4000)\n                        this.userDataToSend.datas = [];\n                    }else{\n                        this.errorMsg = response.data.status.message\n                        $(\".alert-error\").fadeIn();\n                        setTimeout(function(){\n                            $(\".alert-error\").fadeOut(); \n                        }, 3000)\n                        this.userDataToSend.datas = [];\n                    }  \n                    \n                }\n                else if (response.status == 204) {\n                    this.warningMsg = \"Erreur , lors de la création\";\n                    $(\".alert-warning\").fadeIn();\n                    setTimeout(function(){\n                        $(\".alert-warning\").fadeOut(); \n                    }, 3000)\n                    this.userDataToSend.datas = [];\n                }\n                else{\n                    this.errorMsg = \"Erreur , opération de création impossible\";\n                    $(\".alert-error\").fadeIn();\n                    setTimeout(function(){\n                        $(\".alert-error\").fadeOut(); \n                    }, 3000)\n                    this.userDataToSend.datas = [];\n                }\n            }).catch((e) => {\n                this.errorMsg = e;\n                $(\".alert-error\").fadeIn();\n                setTimeout(function(){\n                    $(\".alert-error\").fadeOut(); \n                }, 3000)\n                this.userDataToSend.datas = [];\n            }).finally(() => {\n                this.overlay = false;\n            })\n        },\n\n        // RECUPERER LA LISTE DES ROLES DÉFINIS\n        async getAllUsersRoles(){\n            await axios.post(API_GET_ALL_ROLES, {}, { headers : HEADERS(this.$store.state.userAuthentified.token) } ).then((response) => {\n                if (response.status == 200) {\n                    if (response.data.status.code != 800) {\n                        this.errorMsg = response.data.status.message\n                        $(\".alert-error\").fadeIn();\n                        setTimeout(function(){\n                            $(\".alert-error\").fadeOut(); \n                        }, 4000)\n                    }else{\n                        this.userRoleList = response.data.items;\n                    }\n                }else{\n                    this.errorMsg = \"Erreur\";\n                    $(\".alert-error\").fadeIn();\n                    setTimeout(function(){\n                        $(\".alert-error\").fadeOut(); \n                    }, 4000)\n                }\n            }).catch((e) => {\n                this.errorMsg = e\n            })\n        }\n\n    },\n\n\n    computed:{\n\n        //CONTRAINTES SUR LES CHAMPS DE SAISIES\n\n        usernameError(){\n            const errors = [];\n            if (!this.$v.userObject.nom.$dirty) return errors\n            !this.$v.userObject.nom.required && errors.push('Le nom de l\\'utilsateur est obligatoire.')\n            !this.$v.userObject.nom.minLength && errors.push('Au moins 2 caractères.')\n            return errors \n        },\n\n\n        surnameError(){\n            const errors = [];\n            if (!this.$v.userObject.prenoms.$dirty) return errors\n            !this.$v.userObject.prenoms.required && errors.push('Le prenom de l\\'utilsateur est obligatoire.')\n            !this.$v.userObject.prenoms.minLength && errors.push('Au moins 2 caractères.')\n            return errors \n        },\n\n        loginError(){\n            const errors = [];\n            if (!this.$v.userObject.login.$dirty) return errors\n            !this.$v.userObject.login.required && errors.push('Le login de l\\'utilsateur est obligatoire.')\n            !this.$v.userObject.login.minLength && errors.push('Au moins 2 caractères.')\n            return errors \n        },\n\n\n        emailError(){\n            const errors = [];\n            if (!this.$v.userObject.email.$dirty) return errors\n            !this.$v.userObject.email.required && errors.push('L\\'email de l\\'utilsateur est obligatoire.')\n            !this.$v.userObject.email.email && errors.push('Format adresse e-mail incorrect.')\n            return errors \n        },\n\n        roleCodeError(){\n            const errors = [];\n            if (!this.$v.userObject.roleCode.$dirty) return errors\n            !this.$v.userObject.roleCode.required && errors.push('Veuillez selectionner un rôle.')\n            return errors \n        }\n\n    },\n\n    mounted(){\n        this.getAllUsersRoles();\n    }\n\n}\n</script>\n\n<style scoped>\n    .myalert{\n        display: none;\n        z-index: 1900;\n    }\n\n    .alert-success{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n\n    .alert-error{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n\n    .alert-warning{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n\n    .myInput{\n        font-family: 'Times New Roman', Times, serif;\n        color: grey;\n        font-size: 15px;\n    }\n\n    .litle_title{\n        font-family: 'Times New Roman', Times, serif;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}