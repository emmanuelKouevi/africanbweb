{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport $ from 'jquery';\nimport { required } from 'vuelidate/lib/validators';\nimport { API_OBTENIR_LISTE_DES_PAYS_DISPONIBLE, API_OBTENIR_LISTE_DES_VILLES_DISPONIBLE, HEADERS } from '../globalConfig/globalConstConfig';\nexport default {\n  name: \"modifierVille\",\n  data() {\n    return {\n      overlay: false,\n      errorMsg: null,\n      warningMsg: null,\n      successMsg: null,\n      paysList: [],\n      villeList: [],\n      objectContainList: {\n        datas: []\n      },\n      ville: {\n        designation: null,\n        paysId: null\n      }\n    };\n  },\n  validations: {\n    ville: {\n      designation: {\n        required\n      }\n    }\n  },\n  methods: {\n    async readAllVilleFromApi() {\n      await axios.post(API_OBTENIR_LISTE_DES_VILLES_DISPONIBLE, {}, {\n        headers: HEADERS(this.$store.state.userAuthentified.token)\n      }).then(response => {\n        this.villesList = response.data.items;\n        this.villesList.forEach(element => {\n          if (element.designation == this.$route.params.designation) {\n            console.log(element);\n            this.ville.designation = element.designation;\n            this.ville.paysId = element.paysId;\n          }\n        });\n      }).catch(e => {\n        this.errorMsg = e;\n        $(\".alert-error\").fadeIn();\n        setTimeout(function () {\n          $(\".alert-error\").fadeOut();\n        }, 4000);\n      });\n    },\n    // RECUPERER LA LISTE DES PAYS DISPONIBLES\n    async obtenirListePaysDisponible() {\n      await axios.post(API_OBTENIR_LISTE_DES_PAYS_DISPONIBLE, {}, {\n        headers: HEADERS(this.$store.state.userAuthentified.token)\n      }).then(response => {\n        if (response.status == 200) {\n          if (response.data.status.code == 800) {\n            this.paysList = response.data.items;\n          }\n        } else {\n          this.errorMsg = \"Erreur coté serveur\";\n          setTimeout(function () {\n            $(\".alert-error\").fadeOut();\n          }, 3000);\n        }\n      }).catch(e => {\n        this.errorMsg = e;\n        setTimeout(function () {\n          $(\".alert-error\").fadeOut();\n        }, 3000);\n      });\n    }\n  },\n  computed: {\n    // ENSEMBLE DES CONTRAINTES POUR L'ENRGISTREMENT D'UN PAYS\n    designationVilleErrors() {\n      const errors = [];\n      if (!this.$v.ville.designation.$dirty) return errors;\n      !this.$v.ville.designation.required && errors.push('Veuillez saisir une désignation.');\n      return errors;\n    }\n  },\n  mounted() {\n    this.obtenirListePaysDisponible();\n    this.readAllVilleFromApi();\n  }\n};","map":{"version":3,"mappings":";AA8CA;AACA;AACA;AACA;AACA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MAEAC;MACAC;MAEAC;QACAC;MACA;MAEAC;QACAC;QACAC;MACA;IACA;EACA;EAEAC;IACAH;MACAC;QACAG;MACA;IACA;EAEA;EAEAC;IAEA;MACA;QAAAC;MAAA;QACA;QACA;UACA;YACAC;YACA;YACA;UACA;QACA;MACA;QACA;QACAC;QACAC;UACAD;QACA;MACA;IACA;IACA;IACA;MACA;QAAAF;MAAA;QACA;UACA;YACA;UACA;QACA,OACA;UACA;UACAG;YACAD;UACA;QACA;MACA;QACA;QACAC;UACAD;QACA;MACA;IACA;EACA;EAEAE;IACA;IACAC;MACA;MACA;MACA;MACA;IACA;EAEA;EAEAC;IACA;IACA;EACA;AACA","names":["name","data","overlay","errorMsg","warningMsg","successMsg","paysList","villeList","objectContainList","datas","ville","designation","paysId","validations","required","methods","headers","console","$","setTimeout","computed","designationVilleErrors","mounted"],"sourceRoot":"src/components/administrateur_societe","sources":["modifierVille.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-form @submit.prevent=\"submitForm\">\n            <v-card max-width=\"1300px\" class=\"mx-auto\">\n                <v-card-title><h6 class=\"font-weight-bold\">MODIFIER UNE VILLE</h6></v-card-title>\n                <v-card-subtitle>Modification d'une ville</v-card-subtitle>\n\n                <v-card-text>\n                    <v-container fluid>\n                        <div class=\"form-group\">\n                            <label for=\"inputAddress\">Designation de la ville</label>\n                            <v-text-field class=\"col-md-6\" dense outlined color=\"primary\" placeholder=\"Entrer une designation\"\n                                :error-messages=\"designationVilleErrors\"\n                                v-model.trim=\"$v.ville.designation.$model\"\n                                @input=\"$v.ville.designation.$touch()\"\n                                @blur=\"$v.ville.designation.$touch()\">\n                            </v-text-field>\n                        </div>\n                        <div class=\"form-row\">\n                            <div class=\"form-group col-md-6\">\n                                <label for=\"inputCity\">Pays</label>\n                                <v-select :items=\"paysList\" item-text=\"designation\" \n                                    item-value=\"id\" dense outlined color=\"teal\" \n                                    v-model=\"ville.paysId\">\n                                </v-select>\n                            </div>\n                        </div>\n                    </v-container>\n                </v-card-text>                \n\n                <v-card-actions>\n                    <v-btn x-small color=\"secondary\">REINITIALISER</v-btn>\n                    <v-btn x-small type=\"submit\" color=\"success\">MODIFIER</v-btn>\n                </v-card-actions>\n\n            </v-card>   \n        </v-form>\n\n        <v-alert class=\"myalert alert-success\" type=\"success\" width=\"350px\" dismissible>{{ successMsg }}</v-alert> \n        <v-alert class=\"myalert alert-warning\" type=\"warning\" width=\"350px\" dismissible>{{ warningMsg }}</v-alert>\n        <v-alert class=\"myalert alert-error\" type=\"error\" width=\"350px\" dismissible>{{ errorMsg }}</v-alert>\n        <v-overlay :value=\"overlay\"><v-progress-circular indeterminate size=\"64\"></v-progress-circular></v-overlay>\n    </v-app>\n</template>\n\n<script>\nimport axios from 'axios';\nimport $ from 'jquery';\nimport { required } from 'vuelidate/lib/validators'\nimport { API_OBTENIR_LISTE_DES_PAYS_DISPONIBLE , API_OBTENIR_LISTE_DES_VILLES_DISPONIBLE ,  HEADERS } from '../globalConfig/globalConstConfig'\nexport default {\n    name:\"modifierVille\",\n    data(){\n        return{\n            overlay : false,\n            errorMsg : null,\n            warningMsg : null ,\n            successMsg : null,\n\n            paysList : [],  \n            villeList : [], \n\n            objectContainList:{\n                datas:[]\n            },\n\n            ville:{\n                designation:null,\n                paysId : null\n            },\n        }\n    },\n\n    validations:{\n        ville:{\n            designation:{\n                required\n            }\n        }\n\n    },\n\n    methods:{\n\n        async readAllVilleFromApi(){\n            await axios.post(API_OBTENIR_LISTE_DES_VILLES_DISPONIBLE, {} , { headers : HEADERS(this.$store.state.userAuthentified.token) }).then((response) => {\n                this.villesList = response.data.items\n                this.villesList.forEach(element => {\n                    if (element.designation == this.$route.params.designation) {\n                        console.log(element)\n                        this.ville.designation = element.designation\n                        this.ville.paysId = element.paysId\n                    }\n                });\n            }).catch((e) => {\n                this.errorMsg = e ;\n                $(\".alert-error\").fadeIn();\n                setTimeout(function(){\n                    $(\".alert-error\").fadeOut(); \n                }, 4000)\n            })\n        },\n        // RECUPERER LA LISTE DES PAYS DISPONIBLES\n        async obtenirListePaysDisponible(){\n            await axios.post(API_OBTENIR_LISTE_DES_PAYS_DISPONIBLE , {}, { headers : HEADERS(this.$store.state.userAuthentified.token) }).then((response) => {\n                if (response.status == 200) {\n                    if (response.data.status.code == 800) {\n                        this.paysList = response.data.items;\n                    }\n                }\n                else{\n                    this.errorMsg = \"Erreur coté serveur\";\n                    setTimeout(function(){\n                        $(\".alert-error\").fadeOut(); \n                    }, 3000)\n                }\n            }).catch((e) => {\n                this.errorMsg = e;\n                setTimeout(function(){\n                    $(\".alert-error\").fadeOut(); \n                }, 3000)\n            })\n        },\n    },\n\n    computed:{\n        // ENSEMBLE DES CONTRAINTES POUR L'ENRGISTREMENT D'UN PAYS\n        designationVilleErrors(){\n            const errors = [];\n            if (!this.$v.ville.designation.$dirty) return errors\n            !this.$v.ville.designation.required && errors.push('Veuillez saisir une désignation.')\n            return errors\n        }\n\n    },\n\n    mounted(){\n        this.obtenirListePaysDisponible();\n        this.readAllVilleFromApi();\n    }\n}\n</script>\n\n<style scoped>\n\n    .title{\n        color: teal;\n        font-weight: bold;\n    }\n    .myalert{\n        display: none;\n        z-index: 1900;\n    }\n\n    .alert-success{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n\n    .alert-error{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n\n    .alert-warning{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n\n</style>"]},"metadata":{},"sourceType":"module"}