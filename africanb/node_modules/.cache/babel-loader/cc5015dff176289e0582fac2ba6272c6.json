{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { required } from 'vuelidate/lib/validators';\nimport axios from \"axios\";\nimport $ from 'jquery';\nimport { API_OBTENIR_REFERENCE_PAR_PAR_FAMILLE, API_CREER_BAGAGE, HEADERS } from '../globalConfig/globalConstConfig';\nexport default {\n  name: \"GestionBagageCompagnieTransport\",\n  data() {\n    return {\n      errorMsg: null,\n      successMsg: null,\n      overlay: false,\n      bagageModel: {\n        designation: null,\n        coutBagageParTypeBagage: null,\n        nombreBagageGratuitParTypeBagage: null,\n        typeBagageDesignation: null,\n        compagnieTransportRaisonSociale: \"KOUEVI CT\"\n      },\n      bagageToSend: {\n        datas: []\n      },\n      referenceBagageList: [],\n      referenceBagage: {\n        referenceFamilleDesignation: \"referenceFamilleBagage\"\n      },\n      objectToSendReferenceBagage: {\n        datas: []\n      }\n    };\n  },\n  validations: {\n    bagageModel: {\n      designation: {\n        required\n      },\n      coutBagageParTypeBagage: {\n        required\n      },\n      nombreBagageGratuitParTypeBagage: {\n        required\n      },\n      typeBagageDesignation: {\n        required\n      }\n    }\n  },\n  methods: {\n    //SOUMISSION DU FORMULAIRE\n    submitForm() {\n      this.creerBagage();\n    },\n    //CREER UNE INSTANCE DE BAGAGE\n    async creerBagage() {\n      this.bagageToSend.datas.push(this.bagageModel);\n      this.overlay = true;\n      await axios.post(API_CREER_BAGAGE, this.bagageToSend, {\n        headers: HEADERS(this.$store.state.userAuthentified.token)\n      }).then(response => {\n        if (response.status == 200) {\n          if (response.data.status.code == 800) {\n            this.successMsg = response.data.status.message;\n            $(\".alert-success\").fadeIn();\n            setTimeout(function () {\n              $(\".alert-success\").fadeOut();\n            }, 4000);\n            this.bagageToSend.datas = [];\n          } else {\n            this.errorMsg = response.data.status.message;\n            $(\".alert-error\").fadeIn();\n            setTimeout(function () {\n              $(\".alert-error\").fadeOut();\n            }, 3000);\n            this.bagageToSend.datas = [];\n          }\n        } else if (response.status == 204) {\n          this.warningMsg = \"Erreur , lors de la création de l'offre de voyage\";\n          $(\".alert-warning\").fadeIn();\n          setTimeout(function () {\n            $(\".alert-warning\").fadeOut();\n          }, 3000);\n          this.bagageToSend.datas = [];\n        } else {\n          this.errorMsg = \"Erreur , opération de création impossible\";\n          $(\".alert-error\").fadeIn();\n          setTimeout(function () {\n            $(\".alert-error\").fadeOut();\n          }, 3000);\n          this.bagageToSend.datas = [];\n        }\n      }).catch(e => {\n        this.errorMsg = e;\n        $(\".alert-error\").fadeIn();\n        setTimeout(function () {\n          $(\".alert-error\").fadeOut();\n        }, 4000);\n        this.bagageToSend.datas = [];\n      }).finally(() => {\n        this.overlay = false;\n      });\n    },\n    //OBTENIR REFERENCE DESIGNATION BAGAGE\n    async obtenirReferenceBagageList() {\n      this.objectToSendReferenceBagage.datas.push(this.referenceBagage);\n      await axios.post(API_OBTENIR_REFERENCE_PAR_PAR_FAMILLE, this.objectToSendReferenceBagage, {\n        headers: HEADERS(this.$store.state.userAuthentified.token)\n      }).then(response => {\n        this.referenceBagageList = response.data.items;\n      }).catch(e => {\n        this.errorMsg = e;\n        $(\".alert-error\").fadeIn();\n        setTimeout(function () {\n          $(\".alert-error\").fadeOut();\n        }, 4000);\n      });\n    },\n    //VERIFIE SI CEST UN NOMBRE POSITIF\n    isNumber(item) {\n      return item > 0;\n    }\n  },\n  computed: {\n    // GESTION DES CONTRAINTES DE CHAMPS D'ENTREES POUR LA CREATION DU MODE D'UNE OFFRE\n\n    designationBagage() {\n      const errors = [];\n      if (!this.$v.bagageModel.designation.$dirty) return errors;\n      !this.$v.bagageModel.designation.required && errors.push('La désignation est obligatoire.');\n      return errors;\n    },\n    prixBagageErrors() {\n      const errors = [];\n      if (!this.$v.bagageModel.coutBagageParTypeBagage.$dirty) return errors;\n      !this.isNumber(this.bagageModel.coutBagageParTypeBagage) && errors.push('Saisissez un prix correct.');\n      !this.$v.bagageModel.coutBagageParTypeBagage.required && errors.push('Le prix est obligatoire.');\n      return errors;\n    },\n    typeBagageErrors() {\n      const errors = [];\n      if (!this.$v.bagageModel.typeBagageDesignation.$dirty) return errors;\n      !this.$v.bagageModel.typeBagageDesignation.required && errors.push('La selection du type du sac est obligatoire.');\n      return errors;\n    },\n    nombreBagageErrors() {\n      const errors = [];\n      !this.isNumber(this.bagageModel.nombreBagageGratuitParTypeBagage) && errors.push('Saisissez un nombre correct.');\n      if (!this.$v.bagageModel.nombreBagageGratuitParTypeBagage.$dirty) return errors;\n      !this.$v.bagageModel.nombreBagageGratuitParTypeBagage.required && errors.push('Veuillez renseigner ce champs.');\n      return errors;\n    }\n  },\n  mounted() {\n    this.obtenirReferenceBagageList();\n  }\n};","map":{"version":3,"mappings":";AAwCA;AACA;AACA;AACA;AACA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MAEAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MAEAC;QACAC;MACA;MAEAC;MAEAC;QACAC;MACA;MAEAC;QACAJ;MACA;IACA;EACA;EAEAK;IACAZ;MACAC;QACAY;MACA;MACAX;QACAW;MACA;MACAV;QACAU;MACA;MACAT;QACAS;MACA;IACA;EACA;EAEAC;IAEA;IACAC;MACA;IACA;IAEA;IACA;MACA;MACA;MACA;QAAAC;MAAA;QACA;UACA;YACA;YACAC;YACAC;cACAD;YACA;YACA;UACA;YACA;YACAA;YACAC;cACAD;YACA;YACA;UACA;QAEA,OACA;UACA;UACAA;UACAC;YACAD;UACA;UACA;QACA,OACA;UACA;UACAA;UACAC;YACAD;UACA;UACA;QACA;MACA;QACA;QACAA;QACAC;UACAD;QACA;QACA;MACA;QACA;MACA;IACA;IAEA;IACA;MACA;MACA;QAAAD;MAAA;QACA;MACA;QACA;QACAC;QACAC;UACAD;QACA;MACA;IACA;IAEA;IACAE;MACA;IACA;EAEA;EAEAC;IAEA;;IAEAC;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;MACA;IACA;EAEA;EAEAC;IACA;EACA;AACA","names":["name","data","errorMsg","successMsg","overlay","bagageModel","designation","coutBagageParTypeBagage","nombreBagageGratuitParTypeBagage","typeBagageDesignation","compagnieTransportRaisonSociale","bagageToSend","datas","referenceBagageList","referenceBagage","referenceFamilleDesignation","objectToSendReferenceBagage","validations","required","methods","submitForm","headers","$","setTimeout","isNumber","computed","designationBagage","prixBagageErrors","typeBagageErrors","nombreBagageErrors","mounted"],"sourceRoot":"src/components/administration_compagnie_transport","sources":["GestionBagageCompagnieTransport.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-form @submit.prevent=\"submitForm\">\n            <v-container fluid>\n                <v-card width=\"1200\" elevation=\"3\">\n                    <v-card-title>GESTION DES BAGAGES</v-card-title>\n                    <v-card-subtitle>Gérer le chargement de bagages</v-card-subtitle>\n                    <v-container>\n                        <v-row>\n                            <v-col cols=\"5\">\n                                <v-text-field :error-messages=\"designationBagage\" rounded dense outlined label=\"Réference du sac\" v-model.trim=\"$v.bagageModel.designation.$model\"></v-text-field>\n                            </v-col>\n                            <v-col cols=\"5\">\n                                <v-select :error-messages=\"typeBagageErrors\" :items=\"referenceBagageList\" item-text=\"designation\" item-value=\"designation\" rounded dense outlined color=\"teal\" label=\"sélectionnez un type de bagage\" v-model.trim=\"$v.bagageModel.typeBagageDesignation.$model\"></v-select>\n                            </v-col>\n                        </v-row>\n                        <v-row>\n                            <v-col cols=\"3\">\n                                <v-text-field :error-messages=\"nombreBagageErrors\" rounded dense outlined label=\"nombre de sac gratuit\" v-model.trim=\"$v.bagageModel.nombreBagageGratuitParTypeBagage.$model\"></v-text-field>\n                            </v-col>\n                            <v-col cols=\"5\">\n                                <v-text-field :error-messages=\"prixBagageErrors\" rounded dense outlined color=\"teal\" label=\"prix par type de sac\" suffix=\"FCFA\" v-model.number=\"$v.bagageModel.coutBagageParTypeBagage.$model\"></v-text-field>\n                            </v-col>\n                        </v-row>\n                    </v-container>\n\n                    <v-card-actions>\n                        <v-btn small rounded outlined>REINITIALISER</v-btn>\n                        <v-btn small type=\"submit\" rounded outlined color=\"primary\">VALIDER</v-btn>\n                    </v-card-actions>\n                </v-card>\n            </v-container>\n        </v-form>\n        <v-alert class=\"myalert alert-error\" type=\"error\" width=\"350px\" dismissible>{{ errorMsg }}</v-alert>\n        <v-alert class=\"myalert alert-success\" type=\"success\" width=\"350px\" dismissible>{{ successMsg }}</v-alert>\n        <v-overlay :value=\"overlay\"><v-progress-circular indeterminate size=\"64\"></v-progress-circular></v-overlay>\n    </v-app>\n</template>\n\n<script>\nimport { required } from 'vuelidate/lib/validators'\nimport axios from \"axios\";\nimport $ from 'jquery'\nimport { API_OBTENIR_REFERENCE_PAR_PAR_FAMILLE , API_CREER_BAGAGE, HEADERS } from '../globalConfig/globalConstConfig'\nexport default {\n    name:\"GestionBagageCompagnieTransport\",\n    data(){\n        return{\n            errorMsg : null,\n            successMsg: null,\n            overlay: false,\n\n            bagageModel:{\n                designation: null,\n                coutBagageParTypeBagage:null,\n                nombreBagageGratuitParTypeBagage:null,\n                typeBagageDesignation:null,\n                compagnieTransportRaisonSociale:\"KOUEVI CT\"\n            },\n\n            bagageToSend:{\n                datas:[]\n            },\n\n            referenceBagageList : [],\n\n            referenceBagage:{\n                referenceFamilleDesignation: \"referenceFamilleBagage\"\n            },\n\n            objectToSendReferenceBagage:{\n                datas:[],\n            },\n        }\n    },\n\n    validations:{\n        bagageModel:{\n            designation:{\n                required\n            },\n            coutBagageParTypeBagage:{\n                required\n            },\n            nombreBagageGratuitParTypeBagage:{\n                required\n            },\n            typeBagageDesignation:{\n                required\n            }\n        }\n    },\n\n    methods:{\n\n        //SOUMISSION DU FORMULAIRE\n        submitForm(){\n            this.creerBagage();\n        },\n\n        //CREER UNE INSTANCE DE BAGAGE\n        async creerBagage(){\n            this.bagageToSend.datas.push(this.bagageModel)\n            this.overlay = true ;\n            await axios.post(API_CREER_BAGAGE, this.bagageToSend , { headers : HEADERS(this.$store.state.userAuthentified.token) }).then((response) => {\n                if (response.status == 200) {\n                    if (response.data.status.code == 800) {\n                        this.successMsg = response.data.status.message\n                        $(\".alert-success\").fadeIn();\n                        setTimeout(function(){\n                            $(\".alert-success\").fadeOut(); \n                        }, 4000)\n                        this.bagageToSend.datas = [] ;\n                    }else{\n                        this.errorMsg = response.data.status.message\n                        $(\".alert-error\").fadeIn();\n                        setTimeout(function(){\n                            $(\".alert-error\").fadeOut(); \n                        }, 3000)\n                        this.bagageToSend.datas = [] ;\n                    }  \n                    \n                }\n                else if (response.status == 204) {\n                    this.warningMsg = \"Erreur , lors de la création de l'offre de voyage\";\n                    $(\".alert-warning\").fadeIn();\n                    setTimeout(function(){\n                        $(\".alert-warning\").fadeOut(); \n                    }, 3000)\n                    this.bagageToSend.datas = [] ;\n                }\n                else{\n                    this.errorMsg = \"Erreur , opération de création impossible\";\n                    $(\".alert-error\").fadeIn();\n                    setTimeout(function(){\n                        $(\".alert-error\").fadeOut(); \n                    }, 3000)\n                    this.bagageToSend.datas = [] ;\n                }\n            }).catch((e) => {\n                this.errorMsg = e ;\n                $(\".alert-error\").fadeIn();\n                setTimeout(function(){\n                    $(\".alert-error\").fadeOut(); \n                }, 4000)\n                this.bagageToSend.datas = [] ;\n            }).finally(() => {\n                this.overlay = false;\n            })\n        },\n\n        //OBTENIR REFERENCE DESIGNATION BAGAGE\n        async obtenirReferenceBagageList(){\n            this.objectToSendReferenceBagage.datas.push(this.referenceBagage)\n            await axios.post(API_OBTENIR_REFERENCE_PAR_PAR_FAMILLE, this.objectToSendReferenceBagage , { headers : HEADERS(this.$store.state.userAuthentified.token) }).then((response) => {\n                this.referenceBagageList = response.data.items\n            }).catch((e) => {\n                this.errorMsg = e ;\n                $(\".alert-error\").fadeIn();\n                setTimeout(function(){\n                    $(\".alert-error\").fadeOut(); \n                }, 4000)\n            })\n        },\n\n        //VERIFIE SI CEST UN NOMBRE POSITIF\n        isNumber(item){\n          return  item  > 0\n        },\n\n    },\n\n    computed:{\n\n        // GESTION DES CONTRAINTES DE CHAMPS D'ENTREES POUR LA CREATION DU MODE D'UNE OFFRE\n\n        designationBagage(){\n           const errors = [];\n            if (!this.$v.bagageModel.designation.$dirty) return errors\n            !this.$v.bagageModel.designation.required && errors.push('La désignation est obligatoire.')\n            return errors \n        },\n\n        prixBagageErrors(){\n           const errors = [];\n            if (!this.$v.bagageModel.coutBagageParTypeBagage.$dirty) return errors\n            !this.isNumber(this.bagageModel.coutBagageParTypeBagage) && errors.push('Saisissez un prix correct.')\n            !this.$v.bagageModel.coutBagageParTypeBagage.required && errors.push('Le prix est obligatoire.')\n            return errors \n        },\n\n        typeBagageErrors(){\n           const errors = [];\n            if (!this.$v.bagageModel.typeBagageDesignation.$dirty) return errors\n            !this.$v.bagageModel.typeBagageDesignation.required && errors.push('La selection du type du sac est obligatoire.')\n            return errors \n        },\n\n        nombreBagageErrors(){\n           const errors = [];\n           !this.isNumber(this.bagageModel.nombreBagageGratuitParTypeBagage) && errors.push('Saisissez un nombre correct.')\n            if (!this.$v.bagageModel.nombreBagageGratuitParTypeBagage.$dirty) return errors\n            !this.$v.bagageModel.nombreBagageGratuitParTypeBagage.required && errors.push('Veuillez renseigner ce champs.')\n            return errors \n        },\n\n    },\n\n    mounted(){\n        this.obtenirReferenceBagageList();\n    }\n}\n</script>\n\n<style scoped>\n\n    .myalert{\n        display: none;\n        z-index: 1900;\n    }\n\n    .alert-success{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n\n    .alert-error{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n\n    .alert-warning{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    } \n\n</style>"]},"metadata":{},"sourceType":"module"}