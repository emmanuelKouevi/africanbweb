{"ast":null,"code":"import axios from 'axios';\nimport $ from 'jquery';\nimport { API_GET_ALL_FUNCTIONNALITIES, API_GET_ALL_ROLES, HEADERS } from '../globalConfig/globalConstConfig';\nexport default {\n  name: 'gestionFonctionnalitesEtRoles',\n  data() {\n    return {\n      errorMsg: null,\n      functionnalitiesList: [],\n      userRoleList: [],\n      loadingUserRole: true,\n      searchUserRole: '',\n      headersUserRole: [{\n        text: 'reference',\n        value: 'id'\n      }, {\n        text: 'Libelle',\n        value: 'libelle'\n      }, {\n        text: 'Code',\n        value: 'code'\n      }\n      //{text : 'Actions' , value : 'actions' , sortable : false}\n      ],\n\n      loadingFunctionnality: true,\n      searchFunctionnality: '',\n      headersFunctionnality: [{\n        text: 'reference',\n        value: 'id'\n      }, {\n        text: 'Libelle',\n        value: 'libelle'\n      }, {\n        text: 'Code',\n        value: 'code'\n      }\n      //{text : 'Actions' , value : 'actions' , sortable : false}\n      ]\n    };\n  },\n\n  methods: {\n    //RECUPERER LA LISTE DES ROLES CRÉES\n    async getAllUserRole() {\n      this.loadingUserRole = true;\n      await axios.post(API_GET_ALL_ROLES, {}, {\n        headers: HEADERS(this.$store.state.userAuthentified.token)\n      }).then(response => {\n        if (response.status == 200) {\n          if (response.data.status.code != 800) {\n            this.errorMsg = response.data.status.message;\n            $(\".alert-error\").fadeIn();\n            setTimeout(function () {\n              $(\".alert-error\").fadeOut();\n            }, 4000);\n          } else {\n            this.userRoleList = response.data.items;\n          }\n        } else {\n          this.errorMsg = \"Erreur\";\n          $(\".alert-error\").fadeIn();\n          setTimeout(function () {\n            $(\".alert-error\").fadeOut();\n          }, 4000);\n        }\n      }).catch(e => {\n        this.errorMsg = e;\n      }).finally(() => {\n        this.loadingUserRole = false;\n      });\n    },\n    // RECUPERER LA LISTE DES FONCTIONNALITÉS\n    async getAllFunctionnalities() {\n      this.loadingFunctionnality = true;\n      await axios.post(API_GET_ALL_FUNCTIONNALITIES, {}, {\n        headers: HEADERS(this.$store.state.userAuthentified.token)\n      }).then(response => {\n        if (response.status == 200) {\n          if (response.data.status.code != 800) {\n            this.errorMsg = response.data.status.message;\n            $(\".alert-error\").fadeIn();\n            setTimeout(function () {\n              $(\".alert-error\").fadeOut();\n            }, 4000);\n          } else {\n            this.functionnalitiesList = response.data.items;\n          }\n        } else {\n          this.errorMsg = \"Erreur\";\n          $(\".alert-error\").fadeIn();\n          setTimeout(function () {\n            $(\".alert-error\").fadeOut();\n          }, 4000);\n        }\n      }).catch(e => {\n        this.errorMsg = e;\n      }).finally(() => {\n        this.loadingFunctionnality = false;\n      });\n    }\n  },\n  mounted() {\n    this.getAllFunctionnalities();\n    this.getAllUserRole();\n  }\n};","map":{"version":3,"mappings":"AA8CA;AACA;AACA;AACA;EACAA;EACAC;IACA;MACAC;MAEAC;MACAC;MAEAC;MACAC;MACAC,kBACA;QAAAC;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA;MACA;MAAA,CACA;;MAGAC;MACAC;MACAC,wBACA;QAAAJ;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA;MACA;MAAA;IAEA;EACA;;EAEAI;IAEA;IACA;MACA;MACA;QAAAC;MAAA;QACA;UACA;YACA;YACAC;YACAC;cACAD;YACA;UACA;YACA;UACA;QACA;UACA;UACAA;UACAC;YACAD;UACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;IAEA;IACA;MACA;MACA;QAAAD;MAAA;QACA;UACA;YACA;YACAC;YACAC;cACAD;YACA;UACA;YACA;UACA;QACA;UACA;UACAA;UACAC;YACAD;UACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;EAEA;EAGAE;IACA;IACA;EACA;AACA","names":["name","data","errorMsg","functionnalitiesList","userRoleList","loadingUserRole","searchUserRole","headersUserRole","text","value","loadingFunctionnality","searchFunctionnality","headersFunctionnality","methods","headers","$","setTimeout","mounted"],"sourceRoot":"src/components/administrateur_societe","sources":["gestionFonctionnalitesEtRoles.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-card>\n            <v-card-title class=\"title-card\"><h5>FONCTIONNALITÉS UTILISATEURS</h5>\n                <v-spacer></v-spacer>\n                <v-text-field v-model=\"search\" append-icon=\"mdi-magnify\" label=\"Search\" single-line hide-details></v-text-field>               \n            </v-card-title>\n            \n            <v-data-table\n                :headers=\"headersFunctionnality\"\n                :items=\"functionnalitiesList\"\n                :loading=\"loadingFunctionnality\"\n                :search=\"searchFunctionnality\">\n\n                <!--<template v-slot:[`item.actions`]=\"{ item }\">\n                    <v-icon title=\"editer\" color=\"blue\" small class=\"mr-2\" @click=\"editerOffreVoyage(item)\">mdi-pencil</v-icon>                      \n                    <v-icon title=\"supprimer\" color=\"red\" small class=\"mr-2\" @click=\"supprimerProduitLogement(item)\">mdi-delete</v-icon>\n                </template>-->\n\n            </v-data-table>\n        </v-card><br>\n        <v-divider></v-divider><br>\n        <v-card>\n            <v-card-title class=\"title-card\"><h5>ROLES UTILISATEURS</h5>\n                <v-spacer></v-spacer>\n                <v-text-field v-model=\"search\" append-icon=\"mdi-magnify\" label=\"Search\" single-line hide-details></v-text-field>               \n            </v-card-title>\n            \n            <v-data-table\n                :headers=\"headersUserRole\"\n                :items=\"userRoleList\"\n                :loading=\"loadingUserRole\"\n                :search=\"searchUserRole\">\n\n                <!--<template v-slot:[`item.actions`]=\"{ item }\">\n                    <v-icon title=\"editer\" color=\"blue\" small class=\"mr-2\" @click=\"editerOffreVoyage(item)\">mdi-pencil</v-icon>\n                    <v-icon title=\"supprimer\" color=\"red\" small class=\"mr-2\" @click=\"supprimerProduitLogement(item)\">mdi-delete</v-icon>\n                </template>-->\n\n            </v-data-table>\n        </v-card>\n        <v-alert class=\"myalert alert-error\" type=\"error\" width=\"350px\" dismissible>{{ errorMsg }}</v-alert>\n    </v-app>\n</template>\n\n<script>\nimport axios from 'axios';\nimport $ from 'jquery';\nimport { API_GET_ALL_FUNCTIONNALITIES , API_GET_ALL_ROLES , HEADERS} from '../globalConfig/globalConstConfig'\nexport default {\n    name:'gestionFonctionnalitesEtRoles',\n    data(){\n        return{\n            errorMsg: null,\n\n            functionnalitiesList : [],\n            userRoleList : [],\n\n            loadingUserRole:true,\n            searchUserRole:'',\n            headersUserRole:[\n                {text : 'reference' , value : 'id'},\n                {text : 'Libelle' , value : 'libelle'},\n                {text : 'Code' , value : 'code'},\n                //{text : 'Actions' , value : 'actions' , sortable : false}\n            ],\n\n\n            loadingFunctionnality:true,\n            searchFunctionnality:'',\n            headersFunctionnality:[\n                {text : 'reference' , value : 'id'},\n                {text : 'Libelle' , value : 'libelle'},\n                {text : 'Code' , value : 'code'},\n                //{text : 'Actions' , value : 'actions' , sortable : false}\n            ],\n        }\n    },\n\n    methods:{\n\n        //RECUPERER LA LISTE DES ROLES CRÉES\n        async getAllUserRole(){\n            this.loadingUserRole = true\n            await axios.post(API_GET_ALL_ROLES, {} , { headers : HEADERS(this.$store.state.userAuthentified.token) } ).then((response) => {\n                if (response.status == 200) {\n                    if (response.data.status.code != 800) {\n                        this.errorMsg = response.data.status.message\n                        $(\".alert-error\").fadeIn();\n                        setTimeout(function(){\n                            $(\".alert-error\").fadeOut(); \n                        }, 4000)\n                    }else{\n                        this.userRoleList = response.data.items;\n                    }\n                }else{\n                    this.errorMsg = \"Erreur\";\n                    $(\".alert-error\").fadeIn();\n                    setTimeout(function(){\n                        $(\".alert-error\").fadeOut(); \n                    }, 4000)\n                }\n            }).catch((e) => {\n                this.errorMsg = e\n            }).finally(() => {\n                this.loadingUserRole = false;   \n            })\n        },\n\n        // RECUPERER LA LISTE DES FONCTIONNALITÉS\n        async getAllFunctionnalities(){\n            this.loadingFunctionnality = true\n            await axios.post(API_GET_ALL_FUNCTIONNALITIES, {}, { headers : HEADERS(this.$store.state.userAuthentified.token) } ).then((response) => {\n                if (response.status == 200) {\n                    if (response.data.status.code != 800) {\n                        this.errorMsg = response.data.status.message\n                        $(\".alert-error\").fadeIn();\n                        setTimeout(function(){\n                            $(\".alert-error\").fadeOut(); \n                        }, 4000)\n                    }else{\n                        this.functionnalitiesList = response.data.items;\n                    }\n                }else{\n                    this.errorMsg = \"Erreur\";\n                    $(\".alert-error\").fadeIn();\n                    setTimeout(function(){\n                        $(\".alert-error\").fadeOut(); \n                    }, 4000)\n                }\n            }).catch((e) => {\n                this.errorMsg = e\n            }).finally(() => {\n                this.loadingFunctionnality = false;   \n            })\n        },\n\n    },\n\n\n    mounted(){\n        this.getAllFunctionnalities();\n        this.getAllUserRole();\n    }\n}\n</script>\n\n<style scoped>\n    .myalert{\n        display: none;\n        z-index: 1900;\n    }\n\n    .alert-error{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}